#if 0
;
; Note: shader requires additional functionality:
;       UAVs at every shader stage
;
;
; Buffer Definitions:
;
; cbuffer Constants
; {
;
;   struct Constants
;   {
;
;       struct struct.InlineConstantBuffer
;       {
;
;           column_major float4x4 CameraToWorld;      ; Offset:    0
;           float4 SkyTopColor;                       ; Offset:   64
;           float4 SkyBottomColor;                    ; Offset:   80
;           uint RandomFloatCount;                    ; Offset:   96
;           float3 Pad01;                             ; Offset:  100
;           float VertFoVRad;                         ; Offset:  112
;           uint MaxRecursionDepth;                   ; Offset:  116
;           uint RaysPerPixel;                        ; Offset:  120
;           float LambertianAttenuationValue;         ; Offset:  124
;       
;       } Constants                                   ; Offset:    0
;
;   
;   } Constants                                       ; Offset:    0 Size:   128
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; Constants                         cbuffer      NA          NA     CB0            cb0     1
; Scene                             texture     i32         ras      T0             t0     1
; RenderTarget                          UAV     f32          2d      U0             u0     1
; RandomNumberBuffer                    UAV     f32         buf      U1             u1     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%struct.RaytracingAccelerationStructure = type { i32 }
%"class.RWTexture2D<vector<float, 4> >" = type { <4 x float> }
%"class.RWBuffer<float>" = type { float }
%Constants = type { %struct.InlineConstantBuffer }
%struct.InlineConstantBuffer = type { %class.matrix.float.4.4, <4 x float>, <4 x float>, i32, <3 x float>, float, i32, i32, float }
%class.matrix.float.4.4 = type { [4 x <4 x float>] }
%dx.types.Handle = type { i8* }
%struct.RayPayload = type { <3 x float>, <3 x float>, i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%struct.RayDesc = type { <3 x float>, float, <3 x float>, float }

@"\01?Scene@@3URaytracingAccelerationStructure@@A" = external constant %struct.RaytracingAccelerationStructure, align 4
@"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A" = external constant %"class.RWTexture2D<vector<float, 4> >", align 4
@"\01?RandomNumberBuffer@@3V?$RWBuffer@M@@A" = external constant %"class.RWBuffer<float>", align 4
@Constants = external constant %Constants

; Function Attrs: nounwind
define void @"\01?RayGeneration@@YAXXZ"() #0 {
  %1 = load %struct.RaytracingAccelerationStructure, %struct.RaytracingAccelerationStructure* @"\01?Scene@@3URaytracingAccelerationStructure@@A", align 4
  %2 = load %"class.RWBuffer<float>", %"class.RWBuffer<float>"* @"\01?RandomNumberBuffer@@3V?$RWBuffer@M@@A", align 4
  %3 = load %"class.RWTexture2D<vector<float, 4> >", %"class.RWTexture2D<vector<float, 4> >"* @"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A", align 4
  %4 = load %Constants, %Constants* @Constants, align 4
  %Constants48 = call %dx.types.Handle @dx.op.createHandleForLib.Constants(i32 160, %Constants %4)  ; CreateHandleForLib(Resource)
  %5 = alloca %struct.RayPayload, align 8
  %DispatchRaysDimensions20 = call i32 @dx.op.dispatchRaysDimensions.i32(i32 146, i8 0)  ; DispatchRaysDimensions(col)
  %DispatchRaysDimensions18 = call i32 @dx.op.dispatchRaysDimensions.i32(i32 146, i8 1)  ; DispatchRaysDimensions(col)
  %DispatchRaysIndex15 = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 0)  ; DispatchRaysIndex(col)
  %DispatchRaysIndex13 = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 1)  ; DispatchRaysIndex(col)
  %6 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %Constants48, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %7 = extractvalue %dx.types.CBufRet.f32 %6, 0
  %8 = extractvalue %dx.types.CBufRet.f32 %6, 1
  %9 = extractvalue %dx.types.CBufRet.f32 %6, 2
  %10 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %Constants48, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %11 = extractvalue %dx.types.CBufRet.i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %._crit_edge, label %.lr.ph11.preheader

.lr.ph11.preheader:                               ; preds = %0
  br label %.lr.ph11

.lr.ph11:                                         ; preds = %.loopexit, %.lr.ph11.preheader
  %Payload.1.09.i0 = phi float [ %.i0, %.loopexit ], [ undef, %.lr.ph11.preheader ]
  %Payload.1.09.i1 = phi float [ %.i1, %.loopexit ], [ undef, %.lr.ph11.preheader ]
  %Payload.1.09.i2 = phi float [ %.i2, %.loopexit ], [ undef, %.lr.ph11.preheader ]
  %RayIndex.08 = phi i32 [ %113, %.loopexit ], [ 1, %.lr.ph11.preheader ]
  %PixelColor.07.i0 = phi float [ %110, %.loopexit ], [ 0.000000e+00, %.lr.ph11.preheader ]
  %PixelColor.07.i1 = phi float [ %111, %.loopexit ], [ 0.000000e+00, %.lr.ph11.preheader ]
  %PixelColor.07.i2 = phi float [ %112, %.loopexit ], [ 0.000000e+00, %.lr.ph11.preheader ]
  %Payload.1.09.upto0 = insertelement <3 x float> undef, float %Payload.1.09.i0, i32 0
  %Payload.1.09.upto1 = insertelement <3 x float> %Payload.1.09.upto0, float %Payload.1.09.i1, i32 1
  %Payload.1.09 = insertelement <3 x float> %Payload.1.09.upto1, float %Payload.1.09.i2, i32 2
  %13 = shl i32 %RayIndex.08, 1
  %14 = add i32 %13, -2
  %15 = add i32 %13, -1
  %16 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %Constants48, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %17 = extractvalue %dx.types.CBufRet.i32 %16, 0
  %18 = urem i32 %14, %17
  %19 = urem i32 %15, %17
  %20 = call %dx.types.Handle @"dx.op.createHandleForLib.class.RWBuffer<float>"(i32 160, %"class.RWBuffer<float>" %2)  ; CreateHandleForLib(Resource)
  %BufferLoad23 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %20, i32 %18, i32 undef)  ; BufferLoad(srv,index,wot)
  %21 = extractvalue %dx.types.ResRet.f32 %BufferLoad23, 0
  %22 = fmul fast float %21, 5.000000e-01
  %BufferLoad = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %20, i32 %19, i32 undef)  ; BufferLoad(srv,index,wot)
  %23 = extractvalue %dx.types.ResRet.f32 %BufferLoad, 0
  %24 = fmul fast float %23, 5.000000e-01
  %25 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %Constants48, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %26 = extractvalue %dx.types.CBufRet.f32 %25, 0
  %27 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %Constants48, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %28 = extractvalue %dx.types.CBufRet.f32 %27, 0
  %29 = extractvalue %dx.types.CBufRet.f32 %27, 1
  %30 = extractvalue %dx.types.CBufRet.f32 %27, 2
  %31 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %Constants48, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %32 = extractvalue %dx.types.CBufRet.f32 %31, 0
  %33 = extractvalue %dx.types.CBufRet.f32 %31, 1
  %34 = extractvalue %dx.types.CBufRet.f32 %31, 2
  %35 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %Constants48, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %36 = extractvalue %dx.types.CBufRet.f32 %35, 0
  %37 = extractvalue %dx.types.CBufRet.f32 %35, 1
  %38 = extractvalue %dx.types.CBufRet.f32 %35, 2
  %39 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %Constants48, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %40 = extractvalue %dx.types.CBufRet.f32 %39, 0
  %41 = extractvalue %dx.types.CBufRet.f32 %39, 1
  %42 = extractvalue %dx.types.CBufRet.f32 %39, 2
  %43 = uitofp i32 %DispatchRaysIndex15 to float
  %44 = fadd fast float %43, 5.000000e-01
  %45 = fadd fast float %44, %22
  %46 = uitofp i32 %DispatchRaysDimensions20 to float
  %47 = fdiv fast float %45, %46
  %48 = fmul fast float %47, 2.000000e+00
  %49 = fadd fast float %48, -1.000000e+00
  %50 = uitofp i32 %DispatchRaysDimensions18 to float
  %51 = fdiv fast float %46, %50
  %52 = fmul fast float %49, %51
  %53 = fmul fast float %26, 5.000000e-01
  %Tan24 = call float @dx.op.unary.f32(i32 14, float %53)  ; Tan(value)
  %54 = fmul fast float %52, %Tan24
  %55 = uitofp i32 %DispatchRaysIndex13 to float
  %56 = fadd fast float %55, 5.000000e-01
  %57 = fadd fast float %56, %24
  %58 = fdiv fast float %57, %50
  %59 = fmul fast float %58, 2.000000e+00
  %60 = fadd fast float %59, -1.000000e+00
  %61 = fmul fast float %Tan24, %60
  %62 = fsub fast float -0.000000e+00, %61
  %63 = fmul fast float %54, %28
  %FMad35 = call float @dx.op.tertiary.f32(i32 46, float %32, float %62, float %63)  ; FMad(a,b,c)
  %64 = fmul fast float %54, %29
  %FMad32 = call float @dx.op.tertiary.f32(i32 46, float %33, float %62, float %64)  ; FMad(a,b,c)
  %65 = fmul fast float %54, %30
  %FMad29 = call float @dx.op.tertiary.f32(i32 46, float %34, float %62, float %65)  ; FMad(a,b,c)
  %66 = fsub fast float %36, %7
  %67 = fadd fast float %66, %40
  %.i049 = fadd fast float %67, %FMad35
  %68 = fsub fast float %37, %8
  %69 = fadd fast float %68, %41
  %.i150 = fadd fast float %69, %FMad32
  %70 = fsub fast float %38, %9
  %71 = fadd fast float %70, %42
  %.i251 = fadd fast float %71, %FMad29
  %72 = call float @dx.op.dot3.f32(i32 55, float %.i049, float %.i150, float %.i251, float %.i049, float %.i150, float %.i251)  ; Dot3(ax,ay,az,bx,by,bz)
  %Rsqrt = call float @dx.op.unary.f32(i32 25, float %72)  ; Rsqrt(value)
  %.i052 = fmul fast float %Rsqrt, %.i049
  %.i153 = fmul fast float %.i150, %Rsqrt
  %.i254 = fmul fast float %.i251, %Rsqrt
  %73 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %5, i32 0, i32 0
  store <3 x float> zeroinitializer, <3 x float>* %73, align 8
  %74 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %5, i32 0, i32 1
  store <3 x float> %Payload.1.09, <3 x float>* %74, align 4
  %75 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %5, i32 0, i32 2
  store i32 0, i32* %75, align 8
  %76 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %5, i32 0, i32 3
  store i32 1, i32* %76, align 4
  %77 = call %dx.types.Handle @dx.op.createHandleForLib.struct.RaytracingAccelerationStructure(i32 160, %struct.RaytracingAccelerationStructure %1)  ; CreateHandleForLib(Resource)
  call void @dx.op.traceRay.struct.RayPayload(i32 157, %dx.types.Handle %77, i32 5, i32 -1, i32 0, i32 1, i32 0, float %7, float %8, float %9, float 0.000000e+00, float %.i052, float %.i153, float %.i254, float 1.000000e+04, %struct.RayPayload* nonnull %5)  ; TraceRay(AccelerationStructure,RayFlags,InstanceInclusionMask,RayContributionToHitGroupIndex,MultiplierForGeometryContributionToShaderIndex,MissShaderIndex,Origin_X,Origin_Y,Origin_Z,TMin,Direction_X,Direction_Y,Direction_Z,TMax,payload)
  %78 = load <3 x float>, <3 x float>* %73, align 8
  %.i058 = extractelement <3 x float> %78, i32 0
  %.i159 = extractelement <3 x float> %78, i32 1
  %.i260 = extractelement <3 x float> %78, i32 2
  %79 = load <3 x float>, <3 x float>* %74, align 4
  %.i0 = extractelement <3 x float> %79, i32 0
  %.i1 = extractelement <3 x float> %79, i32 1
  %.i2 = extractelement <3 x float> %79, i32 2
  %80 = load i32, i32* %75, align 8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %.loopexit, label %82

; <label>:82                                      ; preds = %.lr.ph11
  %83 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %Constants48, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %84 = extractvalue %dx.types.CBufRet.f32 %83, 0
  %85 = extractvalue %dx.types.CBufRet.f32 %83, 1
  %86 = extractvalue %dx.types.CBufRet.f32 %83, 2
  %87 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %Constants48, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %88 = extractvalue %dx.types.CBufRet.f32 %87, 0
  %89 = extractvalue %dx.types.CBufRet.f32 %87, 1
  %90 = extractvalue %dx.types.CBufRet.f32 %87, 2
  %91 = fmul fast float %.i1, 5.000000e-01
  %92 = fsub fast float 5.000000e-01, %91
  %93 = fmul fast float %84, %92
  %94 = fadd fast float %91, 5.000000e-01
  %95 = fmul fast float %88, %94
  %96 = fadd fast float %95, %93
  %97 = fmul fast float %85, %92
  %98 = fmul fast float %89, %94
  %99 = fadd fast float %98, %97
  %100 = fmul fast float %86, %92
  %101 = fmul fast float %90, %94
  %102 = fadd fast float %101, %100
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %82
  %Payload.0.16.i0 = phi float [ %105, %.lr.ph ], [ %96, %82 ]
  %Payload.0.16.i1 = phi float [ %106, %.lr.ph ], [ %99, %82 ]
  %Payload.0.16.i2 = phi float [ %107, %.lr.ph ], [ %102, %82 ]
  %i.05 = phi i32 [ %108, %.lr.ph ], [ 1, %82 ]
  %103 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %Constants48, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %104 = extractvalue %dx.types.CBufRet.f32 %103, 3
  %105 = fmul fast float %104, %Payload.0.16.i0
  %106 = fmul fast float %104, %Payload.0.16.i1
  %107 = fmul fast float %104, %Payload.0.16.i2
  %108 = add i32 %i.05, 1
  %109 = icmp ugt i32 %108, %80
  br i1 %109, label %.loopexit.loopexit, label %.lr.ph

.loopexit.loopexit:                               ; preds = %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %.lr.ph11
  %Payload.0.2.i0 = phi float [ %.i058, %.lr.ph11 ], [ %105, %.loopexit.loopexit ]
  %Payload.0.2.i1 = phi float [ %.i159, %.lr.ph11 ], [ %106, %.loopexit.loopexit ]
  %Payload.0.2.i2 = phi float [ %.i260, %.lr.ph11 ], [ %107, %.loopexit.loopexit ]
  %110 = fadd fast float %Payload.0.2.i0, %PixelColor.07.i0
  %111 = fadd fast float %Payload.0.2.i1, %PixelColor.07.i1
  %112 = fadd fast float %Payload.0.2.i2, %PixelColor.07.i2
  %113 = add i32 %RayIndex.08, 1
  %114 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %Constants48, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %115 = extractvalue %dx.types.CBufRet.i32 %114, 2
  %116 = icmp ugt i32 %113, %115
  br i1 %116, label %._crit_edge.loopexit, label %.lr.ph11

._crit_edge.loopexit:                             ; preds = %.loopexit
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  %PixelColor.0.lcssa.i0 = phi float [ 0.000000e+00, %0 ], [ %110, %._crit_edge.loopexit ]
  %PixelColor.0.lcssa.i1 = phi float [ 0.000000e+00, %0 ], [ %111, %._crit_edge.loopexit ]
  %PixelColor.0.lcssa.i2 = phi float [ 0.000000e+00, %0 ], [ %112, %._crit_edge.loopexit ]
  %117 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %Constants48, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %118 = extractvalue %dx.types.CBufRet.i32 %117, 2
  %119 = uitofp i32 %118 to float
  %120 = fdiv fast float %PixelColor.0.lcssa.i0, %119
  %121 = fdiv fast float %PixelColor.0.lcssa.i1, %119
  %122 = fdiv fast float %PixelColor.0.lcssa.i2, %119
  %123 = call %dx.types.Handle @"dx.op.createHandleForLib.class.RWTexture2D<vector<float, 4> >"(i32 160, %"class.RWTexture2D<vector<float, 4> >" %3)  ; CreateHandleForLib(Resource)
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %123, i32 %DispatchRaysIndex15, i32 %DispatchRaysIndex13, i32 undef, float %120, float %121, float %122, float 0.000000e+00, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  ret void
}

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.dispatchRaysIndex.i32(i32, i8) #2

; Function Attrs: nounwind readnone
declare i32 @dx.op.dispatchRaysDimensions.i32(i32, i8) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32, %dx.types.Handle, i32, i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #2

; Function Attrs: nounwind
declare void @dx.op.traceRay.struct.RayPayload(i32, %dx.types.Handle, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, %struct.RayPayload*) #3

; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #3

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #2

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.Constants(i32, %Constants) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @"dx.op.createHandleForLib.class.RWBuffer<float>"(i32, %"class.RWBuffer<float>") #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.struct.RaytracingAccelerationStructure(i32, %struct.RaytracingAccelerationStructure) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @"dx.op.createHandleForLib.class.RWTexture2D<vector<float, 4> >"(i32, %"class.RWTexture2D<vector<float, 4> >") #1

attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="0" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.typeAnnotations = !{!14, !43}
!dx.entryPoints = !{!47, !49}

!0 = !{!"dxc 1.2"}
!1 = !{i32 1, i32 3}
!2 = !{i32 1, i32 4}
!3 = !{!"lib", i32 6, i32 3}
!4 = !{!5, !8, !12, null}
!5 = !{!6}
!6 = !{i32 0, %struct.RaytracingAccelerationStructure* @"\01?Scene@@3URaytracingAccelerationStructure@@A", !"Scene", i32 0, i32 0, i32 1, i32 16, i32 0, !7}
!7 = !{i32 0, i32 4}
!8 = !{!9, !11}
!9 = !{i32 0, %"class.RWTexture2D<vector<float, 4> >"* @"\01?RenderTarget@@3V?$RWTexture2D@V?$vector@M$03@@@@A", !"RenderTarget", i32 0, i32 0, i32 1, i32 2, i1 false, i1 false, i1 false, !10}
!10 = !{i32 0, i32 9}
!11 = !{i32 1, %"class.RWBuffer<float>"* @"\01?RandomNumberBuffer@@3V?$RWBuffer@M@@A", !"RandomNumberBuffer", i32 0, i32 1, i32 1, i32 10, i1 false, i1 false, i1 false, !10}
!12 = !{!13}
!13 = !{i32 0, %Constants* @Constants, !"Constants", i32 0, i32 0, i32 1, i32 128, null}
!14 = !{i32 0, %struct.RaytracingAccelerationStructure undef, !15, %"class.RWTexture2D<vector<float, 4> >" undef, !17, %"class.RWBuffer<float>" undef, !19, %struct.InlineConstantBuffer undef, !20, %struct.RayDesc undef, !31, %struct.RayPayload undef, !36, %Constants undef, !41}
!15 = !{i32 4, !16}
!16 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 4}
!17 = !{i32 16, !18}
!18 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 9}
!19 = !{i32 4, !18}
!20 = !{i32 128, !21, !23, !24, !25, !26, !27, !28, !29, !30}
!21 = !{i32 6, !"CameraToWorld", i32 2, !22, i32 3, i32 0, i32 7, i32 9}
!22 = !{i32 4, i32 4, i32 2}
!23 = !{i32 6, !"SkyTopColor", i32 3, i32 64, i32 7, i32 9}
!24 = !{i32 6, !"SkyBottomColor", i32 3, i32 80, i32 7, i32 9}
!25 = !{i32 6, !"RandomFloatCount", i32 3, i32 96, i32 7, i32 5}
!26 = !{i32 6, !"Pad01", i32 3, i32 100, i32 7, i32 9}
!27 = !{i32 6, !"VertFoVRad", i32 3, i32 112, i32 7, i32 9}
!28 = !{i32 6, !"MaxRecursionDepth", i32 3, i32 116, i32 7, i32 5}
!29 = !{i32 6, !"RaysPerPixel", i32 3, i32 120, i32 7, i32 5}
!30 = !{i32 6, !"LambertianAttenuationValue", i32 3, i32 124, i32 7, i32 9}
!31 = !{i32 32, !32, !33, !34, !35}
!32 = !{i32 6, !"Origin", i32 3, i32 0, i32 7, i32 9}
!33 = !{i32 6, !"TMin", i32 3, i32 12, i32 7, i32 9}
!34 = !{i32 6, !"Direction", i32 3, i32 16, i32 7, i32 9}
!35 = !{i32 6, !"TMax", i32 3, i32 28, i32 7, i32 9}
!36 = !{i32 36, !37, !38, !39, !40}
!37 = !{i32 6, !"Color", i32 3, i32 0, i32 7, i32 9}
!38 = !{i32 6, !"WorldLastScatterDirection", i32 3, i32 16, i32 7, i32 9}
!39 = !{i32 6, !"IntersectionCount", i32 3, i32 28, i32 7, i32 5}
!40 = !{i32 6, !"RecursionDepth", i32 3, i32 32, i32 7, i32 5}
!41 = !{i32 128, !42}
!42 = !{i32 6, !"Constants", i32 3, i32 0}
!43 = !{i32 1, void ()* @"\01?RayGeneration@@YAXXZ", !44}
!44 = !{!45}
!45 = !{i32 1, !46, !46}
!46 = !{}
!47 = !{null, !"", null, !4, !48}
!48 = !{i32 0, i64 65536}
!49 = !{void ()* @"\01?RayGeneration@@YAXXZ", !"\01?RayGeneration@@YAXXZ", null, null, !50}
!50 = !{i32 8, i32 7, i32 5, !51}
!51 = !{i32 0}

#endif

const unsigned char RayGeneration[] = {
  0x44, 0x58, 0x42, 0x43, 0xfd, 0x0d, 0xbf, 0xbe, 0x70, 0xdf, 0x03, 0x08,
  0x5b, 0xfb, 0xe4, 0x71, 0x99, 0x03, 0x37, 0xf0, 0x01, 0x00, 0x00, 0x00,
  0x60, 0x15, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00,
  0x3c, 0x00, 0x00, 0x00, 0xa4, 0x01, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30,
  0x08, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x52, 0x44, 0x41, 0x54, 0x60, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00,
  0x08, 0x01, 0x00, 0x00, 0x44, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x58, 0x00, 0x00, 0x00, 0x00, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e,
  0x74, 0x73, 0x00, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x00, 0x52, 0x65, 0x6e,
  0x64, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x00, 0x52, 0x61,
  0x6e, 0x64, 0x6f, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x75,
  0x66, 0x66, 0x65, 0x72, 0x00, 0x01, 0x3f, 0x52, 0x61, 0x79, 0x47, 0x65,
  0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x40, 0x40, 0x59, 0x41,
  0x58, 0x58, 0x5a, 0x00, 0x52, 0x61, 0x79, 0x47, 0x65, 0x6e, 0x65, 0x72,
  0x61, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x88, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00,
  0x31, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x80, 0x00, 0x00, 0x00, 0x63, 0x00, 0x07, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x14, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0xb4, 0x13, 0x00, 0x00, 0x63, 0x00, 0x06, 0x00,
  0xed, 0x04, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x03, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x9c, 0x13, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0xe4, 0x04, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x1b, 0xc0, 0x23, 0xf8,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x90, 0x08, 0x72, 0x48, 0x87, 0x79, 0x08,
  0x07, 0x71, 0x60, 0x87, 0x72, 0x68, 0x03, 0x7a, 0x08, 0x87, 0x74, 0x60,
  0x87, 0x36, 0x18, 0x87, 0x70, 0x60, 0x07, 0x76, 0x98, 0x07, 0xc0, 0x1c,
  0xc2, 0x81, 0x1d, 0xe6, 0xa1, 0x1c, 0x00, 0x82, 0x1d, 0xca, 0x61, 0x1e,
  0xe6, 0xa1, 0x0d, 0xe0, 0x41, 0x1e, 0xca, 0x61, 0x1c, 0xd2, 0x61, 0x1e,
  0xca, 0xa1, 0x0d, 0xcc, 0x01, 0x1e, 0xda, 0x21, 0x1c, 0xc8, 0x01, 0x30,
  0x87, 0x70, 0x60, 0x87, 0x79, 0x28, 0x07, 0x80, 0x70, 0x87, 0x77, 0x68,
  0x03, 0x73, 0x90, 0x87, 0x70, 0x68, 0x87, 0x72, 0x68, 0x03, 0x78, 0x78,
  0x87, 0x74, 0x70, 0x07, 0x7a, 0x28, 0x07, 0x79, 0x68, 0x83, 0x72, 0x60,
  0x87, 0x74, 0x68, 0x07, 0xc0, 0x1c, 0xc2, 0x81, 0x1d, 0xe6, 0xa1, 0x1c,
  0x00, 0xc2, 0x1d, 0xde, 0xa1, 0x0d, 0xd2, 0xc1, 0x1d, 0xcc, 0x61, 0x1e,
  0xda, 0xc0, 0x1c, 0xe0, 0xa1, 0x0d, 0xda, 0x21, 0x1c, 0xe8, 0x01, 0x1d,
  0x00, 0x73, 0x08, 0x07, 0x76, 0x98, 0x87, 0x72, 0x00, 0x08, 0x77, 0x78,
  0x87, 0x36, 0x70, 0x87, 0x70, 0x70, 0x87, 0x79, 0x68, 0x03, 0x73, 0x80,
  0x87, 0x36, 0x68, 0x87, 0x70, 0xa0, 0x07, 0x74, 0x00, 0xcc, 0x21, 0x1c,
  0xd8, 0x61, 0x1e, 0xca, 0x01, 0x18, 0xdc, 0xe1, 0x1d, 0xda, 0x40, 0x1e,
  0xca, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xce, 0xc1, 0x1d, 0xda, 0x60, 0x1e,
  0xe8, 0x21, 0x1c, 0xc6, 0x61, 0x1d, 0x00, 0x62, 0x1e, 0xe8, 0x21, 0x1c,
  0xc6, 0x61, 0x1d, 0xda, 0x00, 0x1e, 0xe4, 0xe1, 0x1d, 0xe8, 0xa1, 0x1c,
  0xc6, 0x81, 0x1e, 0xde, 0x41, 0x1e, 0xda, 0x40, 0x1c, 0xea, 0xc1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x0d, 0xe6, 0x21, 0x1d, 0xf4, 0xa1, 0x1c,
  0x00, 0x38, 0x00, 0x88, 0x7a, 0x70, 0x87, 0x79, 0x08, 0x07, 0x73, 0x28,
  0x87, 0x36, 0x30, 0x07, 0x78, 0x68, 0x83, 0x76, 0x08, 0x07, 0x7a, 0x40,
  0x07, 0xc0, 0x1c, 0xc2, 0x81, 0x1d, 0xe6, 0xa1, 0x1c, 0x00, 0xa2, 0x1e,
  0xe6, 0xa1, 0x1c, 0xda, 0x60, 0x1e, 0xde, 0xc1, 0x1c, 0xe8, 0xa1, 0x0d,
  0xcc, 0x81, 0x1d, 0xde, 0x21, 0x1c, 0xe8, 0x01, 0x30, 0x87, 0x70, 0x60,
  0x87, 0x79, 0x28, 0x07, 0x60, 0x83, 0x21, 0xfc, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x48, 0x40, 0xb5, 0xc1, 0x18, 0xfe, 0xff, 0xff, 0xff, 0x7f, 0x00,
  0x24, 0x80, 0xda, 0x40, 0x10, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x00, 0xd2,
  0x06, 0xa2, 0x80, 0x80, 0x33, 0x00, 0x00, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x86,
  0x09, 0x01, 0x31, 0x21, 0x28, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00,
  0x74, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xec, 0xc1, 0x1c,
  0x01, 0x18, 0x9c, 0x19, 0x48, 0x53, 0x44, 0x09, 0x93, 0xbf, 0x02, 0xd8,
  0x14, 0x01, 0x02, 0xd2, 0x18, 0x9a, 0x20, 0x10, 0x0b, 0x11, 0x01, 0x13,
  0xe2, 0x34, 0xec, 0x14, 0x51, 0xc2, 0x44, 0x45, 0x04, 0x0a, 0x00, 0x0a,
  0x66, 0x00, 0x86, 0x11, 0x88, 0x61, 0x26, 0x32, 0x18, 0x07, 0x76, 0x08,
  0x87, 0x79, 0x98, 0x07, 0x37, 0x90, 0x85, 0x5b, 0xa0, 0x85, 0x72, 0xc0,
  0x07, 0x7a, 0xa8, 0x07, 0x79, 0x28, 0x07, 0x39, 0x20, 0x05, 0x3e, 0xb0,
  0x87, 0x72, 0x18, 0x07, 0x7a, 0x78, 0x07, 0x79, 0xe0, 0x03, 0x73, 0x60,
  0x87, 0x77, 0x08, 0x07, 0x7a, 0x60, 0x03, 0x30, 0xa0, 0x03, 0x3f, 0x00,
  0x03, 0x3f, 0x40, 0x01, 0x41, 0xc5, 0x4c, 0xd5, 0x38, 0xb0, 0x43, 0x38,
  0xcc, 0xc3, 0x3c, 0xb8, 0x81, 0x2c, 0xdc, 0x82, 0x28, 0xd4, 0x83, 0x39,
  0x98, 0x43, 0x39, 0xc8, 0x03, 0x1f, 0x98, 0x03, 0x3b, 0xbc, 0x43, 0x38,
  0xd0, 0x83, 0x1f, 0xa0, 0x60, 0xa0, 0x23, 0x09, 0x88, 0xb3, 0x84, 0x05,
  0x90, 0x24, 0x9f, 0x01, 0xa6, 0x08, 0xb9, 0xfc, 0x62, 0x71, 0x80, 0xc9,
  0xc7, 0x7d, 0x1c, 0x05, 0xc9, 0x30, 0xc2, 0x30, 0xdc, 0x26, 0x4d, 0x11,
  0x25, 0x4c, 0xbe, 0xd8, 0x2c, 0x48, 0x43, 0x70, 0x4e, 0x23, 0x4d, 0x40,
  0x33, 0x6d, 0x54, 0x51, 0x10, 0x11, 0x4a, 0x14, 0x82, 0x00, 0x96, 0x01,
  0x00, 0x86, 0x4b, 0x38, 0xa7, 0x91, 0x26, 0xa0, 0x99, 0x24, 0x14, 0x30,
  0xd4, 0x8c, 0x00, 0x94, 0xe0, 0x21, 0xe8, 0xa8, 0xe1, 0xf2, 0x27, 0xec,
  0x21, 0x24, 0x9f, 0xdb, 0xa8, 0x62, 0x25, 0x26, 0x1f, 0xb9, 0x6d, 0x44,
  0x00, 0x00, 0x00, 0xcc, 0x11, 0x20, 0x34, 0xdd, 0x33, 0x5c, 0xfe, 0x84,
  0x3d, 0x84, 0xe4, 0x87, 0x40, 0x33, 0x2c, 0x04, 0x0a, 0xa8, 0x42, 0x48,
  0x40, 0x05, 0x90, 0x75, 0xd4, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0xcf,
  0x6d, 0x54, 0xb1, 0x12, 0x93, 0x5f, 0xdc, 0x36, 0x22, 0x86, 0x61, 0x18,
  0x0a, 0x81, 0x01, 0x15, 0x40, 0x59, 0x19, 0x00, 0x60, 0xa2, 0xed, 0xa6,
  0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24, 0x7f, 0x25, 0xa4, 0x95, 0x98, 0xfc,
  0xe2, 0xb6, 0x51, 0x31, 0x0c, 0xc3, 0x00, 0x94, 0xa2, 0x03, 0x2a, 0x00,
  0x20, 0xaf, 0x0c, 0x03, 0x30, 0x10, 0x58, 0x90, 0x01, 0x18, 0x86, 0x61,
  0x18, 0x06, 0x12, 0x2f, 0x92, 0xa6, 0x88, 0x12, 0x26, 0x7f, 0x05, 0xb0,
  0x14, 0xc0, 0x16, 0x07, 0x18, 0x10, 0xb1, 0x2c, 0x00, 0x40, 0x64, 0x89,
  0x1e, 0xa0, 0x02, 0x00, 0x00, 0x00, 0x86, 0x61, 0x18, 0x86, 0x61, 0x18,
  0x4a, 0x32, 0xcb, 0xf2, 0x00, 0x15, 0x00, 0x00, 0xc3, 0x30, 0x0c, 0x13,
  0xa1, 0xa5, 0x18, 0x80, 0x61, 0x18, 0x48, 0x2d, 0x43, 0x05, 0x34, 0xc4,
  0x96, 0xa1, 0x02, 0x0e, 0x72, 0xcb, 0x50, 0x01, 0x01, 0xc1, 0x65, 0xa8,
  0x80, 0x82, 0xe4, 0x81, 0x80, 0x39, 0x82, 0xe0, 0x1c, 0x69, 0x8a, 0x28,
  0x61, 0xf2, 0x57, 0x00, 0xeb, 0x08, 0x49, 0x40, 0xc4, 0x32, 0x2c, 0xc3,
  0x1c, 0x01, 0x28, 0x4c, 0x01, 0xd0, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79,
  0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e,
  0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e,
  0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07,
  0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07,
  0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x3a, 0x0f, 0x84, 0x90, 0x21, 0x23,
  0x45, 0x44, 0x00, 0xc6, 0x00, 0x80, 0x59, 0x03, 0x00, 0xe6, 0x0d, 0x00,
  0x98, 0x3d, 0x00, 0x80, 0x21, 0x0f, 0x04, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x0b, 0x08, 0x00, 0x01, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x19, 0x10, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x36, 0x20, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x6c, 0x40,
  0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0xf1,
  0x80, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8,
  0x03, 0x06, 0x40, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x30, 0xe4, 0x11, 0x03, 0x20, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x18, 0xf2, 0x98, 0x01, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0xd0, 0x00, 0x08, 0x00, 0x02, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x6a, 0x00, 0x04, 0xc0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x36, 0x00,
  0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x8f,
  0x1b, 0x00, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
  0x90, 0x07, 0x0e, 0x80, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x60, 0xc8, 0x23, 0x07, 0x40, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x90, 0x05, 0x02, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0x02, 0x4a, 0xa0, 0x0c, 0x0a, 0xa1, 0x18, 0x46, 0x00,
  0x0a, 0xa4, 0x08, 0x4a, 0xa2, 0x28, 0x0a, 0x50, 0xa0, 0x1c, 0x0a, 0x30,
  0xa0, 0x40, 0x03, 0x0a, 0x38, 0xa0, 0x14, 0x0a, 0x39, 0xa0, 0xc0, 0x03,
  0x0a, 0x3d, 0xa0, 0xe0, 0x03, 0x0a, 0x3f, 0xa0, 0x80, 0x0a, 0xa3, 0x70,
  0x0a, 0xa9, 0x20, 0xe8, 0x2e, 0x40, 0x40, 0x04, 0xaa, 0x47, 0x00, 0xe8,
  0x98, 0x01, 0x20, 0x66, 0x06, 0x80, 0x9a, 0x19, 0x00, 0x22, 0x67, 0x00,
  0xa8, 0x98, 0x01, 0x20, 0x7b, 0x06, 0x80, 0x82, 0x19, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0xf1, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0xc4, 0x83, 0x0c, 0x6f, 0x0c, 0x24, 0xc6, 0x45, 0x66,
  0x43, 0x10, 0x4c, 0x10, 0x80, 0x69, 0x82, 0x00, 0x50, 0x1b, 0x84, 0x81,
  0x98, 0x20, 0x00, 0xd5, 0x06, 0x61, 0x30, 0x38, 0xb0, 0xa5, 0x89, 0x4d,
  0x10, 0x00, 0x6b, 0xc3, 0x80, 0x24, 0xc4, 0x04, 0x01, 0xb8, 0x26, 0x08,
  0x02, 0xc0, 0x62, 0x6a, 0xac, 0xcc, 0xad, 0x6c, 0x82, 0x00, 0x60, 0x1b,
  0x84, 0xc5, 0xd8, 0x90, 0x2c, 0x4c, 0xb3, 0x2c, 0x83, 0xb3, 0x3c, 0x1b,
  0x02, 0x68, 0x82, 0x60, 0x04, 0x64, 0xa4, 0xca, 0xdc, 0xc8, 0xca, 0xe4,
  0xa8, 0xc2, 0xe4, 0xce, 0xca, 0xe8, 0x26, 0x08, 0x40, 0x36, 0x41, 0xa8,
  0x83, 0x36, 0x98, 0x20, 0x00, 0xda, 0x06, 0x61, 0xb1, 0x36, 0x2c, 0x8b,
  0x34, 0x2d, 0xcb, 0x40, 0x55, 0x55, 0x75, 0x4d, 0x10, 0x10, 0x81, 0x92,
  0x54, 0x98, 0x1b, 0xd9, 0x5b, 0x9b, 0x53, 0x5d, 0x9b, 0x58, 0x99, 0x9c,
  0x50, 0x9d, 0x99, 0x59, 0x99, 0xdc, 0x04, 0x01, 0xd8, 0x36, 0x2c, 0x43,
  0xa6, 0x2d, 0xc3, 0xb0, 0x55, 0x55, 0x75, 0x6d, 0x10, 0x30, 0x6e, 0x82,
  0xe0, 0x0c, 0x4c, 0x86, 0xde, 0xdc, 0xe6, 0xe8, 0xc2, 0xdc, 0xe8, 0xe6,
  0x26, 0x08, 0x00, 0xb7, 0x01, 0x59, 0xbc, 0x6f, 0x59, 0x06, 0x30, 0x00,
  0x36, 0x04, 0x61, 0xb0, 0x81, 0x88, 0x3a, 0x31, 0x00, 0x26, 0x08, 0x01,
  0x1d, 0x30, 0x40, 0x9b, 0x20, 0x00, 0xdd, 0x06, 0x23, 0x29, 0x03, 0x62,
  0x31, 0x03, 0x63, 0x83, 0x60, 0x9c, 0xc1, 0x04, 0xa1, 0x90, 0x83, 0x0d,
  0x46, 0x52, 0x06, 0xc4, 0x62, 0x06, 0xd6, 0x06, 0xc1, 0x51, 0x83, 0x09,
  0xc2, 0xe1, 0x06, 0x1b, 0x04, 0x43, 0x0d, 0x26, 0x08, 0xcc, 0x1b, 0xb0,
  0x19, 0x0a, 0x6b, 0x2b, 0x93, 0x0b, 0xa3, 0x7a, 0xbb, 0x7a, 0x93, 0x63,
  0x23, 0xdb, 0x30, 0x18, 0x06, 0xb5, 0x01, 0x49, 0xde, 0x80, 0x82, 0x03,
  0x62, 0x31, 0x03, 0x8b, 0xcb, 0xd4, 0x5a, 0x1e, 0xd5, 0x1b, 0xdc, 0xd0,
  0x1b, 0xdb, 0x9b, 0xdc, 0x04, 0x01, 0xf0, 0x36, 0x18, 0x89, 0x1c, 0x10,
  0x73, 0x60, 0x06, 0x16, 0x9d, 0xa9, 0xb5, 0x3c, 0xa1, 0x37, 0x3a, 0xba,
  0xb7, 0xb6, 0xa1, 0x37, 0xb6, 0x37, 0xb9, 0x09, 0x02, 0xf0, 0x6d, 0x30,
  0x92, 0x3a, 0x20, 0xec, 0xc0, 0x0c, 0x2c, 0x42, 0x52, 0x61, 0x6e, 0x64,
  0x6f, 0x6d, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
  0x13, 0x04, 0x00, 0x0c, 0x26, 0x08, 0x40, 0x18, 0x6c, 0x30, 0x12, 0x3c,
  0x20, 0xf2, 0xc0, 0x0c, 0xf4, 0x80, 0x05, 0x54, 0x18, 0x19, 0x4c, 0xcc,
  0x04, 0x01, 0x10, 0x83, 0x0d, 0x46, 0xc2, 0x07, 0x44, 0x1f, 0x98, 0x81,
  0x45, 0xc5, 0xaa, 0x4c, 0x8e, 0xce, 0xe8, 0xcd, 0x4a, 0x2a, 0x8c, 0x6c,
  0x82, 0x00, 0x8c, 0xc1, 0x06, 0x23, 0xf9, 0x03, 0x02, 0x14, 0xcc, 0xc0,
  0x62, 0xd4, 0x14, 0x86, 0x27, 0x55, 0x36, 0x56, 0x27, 0x37, 0x97, 0xf6,
  0xe6, 0x46, 0x54, 0x06, 0x47, 0x87, 0x36, 0x41, 0x00, 0xc8, 0x60, 0x83,
  0x91, 0x88, 0x02, 0x31, 0x0a, 0x66, 0xa0, 0x07, 0x64, 0xa4, 0xc2, 0xf2,
  0xe6, 0xa0, 0xca, 0xe4, 0xa0, 0xd2, 0xf0, 0xca, 0xd8, 0x26, 0x08, 0x40,
  0x19, 0x6c, 0x30, 0x92, 0x52, 0x20, 0x4c, 0xc1, 0x0c, 0xf4, 0x80, 0x1a,
  0x53, 0x58, 0x9b, 0x58, 0x99, 0x1c, 0x5d, 0x5a, 0x98, 0x5b, 0x10, 0x1d,
  0x5d, 0x99, 0x5b, 0x5d, 0x18, 0x5d, 0xda, 0x9b, 0x9b, 0x55, 0x18, 0x5b,
  0x5d, 0xd9, 0x04, 0x01, 0x30, 0x83, 0x0d, 0x46, 0x82, 0x0a, 0x44, 0x2a,
  0x98, 0x81, 0xb5, 0x41, 0x01, 0x83, 0x38, 0xa0, 0x83, 0x3b, 0xd8, 0x03,
  0x3f, 0x08, 0x05, 0x52, 0x38, 0x05, 0x55, 0x98, 0x20, 0xd8, 0xc1, 0x1c,
  0x4c, 0x10, 0x80, 0x33, 0xa0, 0xf1, 0x24, 0x97, 0x76, 0x96, 0xe6, 0xb6,
  0xc1, 0x48, 0x5c, 0x81, 0x58, 0xcc, 0xc0, 0x22, 0x41, 0xd5, 0x94, 0xe6,
  0x36, 0x41, 0x00, 0xd0, 0x60, 0x83, 0x91, 0xc0, 0x02, 0x11, 0x0b, 0x66,
  0x60, 0x31, 0x21, 0x4a, 0x93, 0x2b, 0x1b, 0xa3, 0x4b, 0x7b, 0x73, 0xdb,
  0x60, 0x24, 0xb3, 0x40, 0x38, 0x66, 0x60, 0x91, 0xa0, 0x6a, 0x0a, 0xc3,
  0x9b, 0x20, 0x00, 0x69, 0xb0, 0xc1, 0x48, 0x6a, 0x81, 0xb0, 0x05, 0x33,
  0xb0, 0x36, 0x14, 0xad, 0xf0, 0x0a, 0xb2, 0x40, 0x0b, 0xb7, 0x30, 0x41,
  0x20, 0x83, 0x38, 0x98, 0x20, 0x00, 0x6a, 0xc0, 0x62, 0xe8, 0x8d, 0xed,
  0x4d, 0x6e, 0x83, 0x91, 0xec, 0x02, 0xb1, 0x98, 0x81, 0xc5, 0xec, 0xea,
  0x4d, 0x8e, 0x8d, 0x8c, 0x29, 0x6c, 0x8e, 0x6e, 0x6a, 0x2c, 0x8c, 0x8e,
  0xae, 0x4c, 0x8e, 0x28, 0x4d, 0xae, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x6d,
  0x83, 0x91, 0xf4, 0x02, 0xe1, 0x98, 0x81, 0xc5, 0x28, 0xc9, 0x8d, 0xae,
  0x4c, 0x6e, 0xae, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x6d, 0xe8, 0xad, 0xce,
  0x8d, 0x6e, 0x83, 0x91, 0xfc, 0x02, 0x61, 0x0b, 0x66, 0xa0, 0x07, 0x74,
  0xa4, 0xca, 0xc6, 0xea, 0xe4, 0xe6, 0xd2, 0xde, 0xdc, 0x88, 0xca, 0xe0,
  0xe8, 0xd0, 0x36, 0x18, 0x49, 0x38, 0x10, 0xad, 0x60, 0x06, 0x7a, 0xb0,
  0xa1, 0xd0, 0x05, 0x5e, 0xf0, 0x05, 0x70, 0x10, 0x87, 0x09, 0x42, 0x03,
  0x07, 0x1b, 0x88, 0xe4, 0x23, 0x96, 0x0d, 0x02, 0x18, 0x94, 0xc3, 0x86,
  0x67, 0x21, 0x03, 0x34, 0x48, 0x83, 0x35, 0x60, 0x83, 0x36, 0x70, 0x83,
  0x55, 0x60, 0x05, 0x5c, 0xc8, 0x85, 0x71, 0x20, 0x07, 0x73, 0x98, 0x20,
  0x44, 0xc4, 0x06, 0x60, 0xc3, 0x30, 0xa4, 0x43, 0x3a, 0x6c, 0x08, 0xd4,
  0x61, 0xc3, 0x30, 0xa0, 0xc3, 0x3a, 0x10, 0x98, 0x20, 0xdc, 0x01, 0x1b,
  0x6c, 0x10, 0x16, 0x77, 0xd8, 0x50, 0x00, 0xed, 0x00, 0x8c, 0xc1, 0x3b,
  0xd0, 0x0a, 0xf8, 0x91, 0x0a, 0xcb, 0x3b, 0x2a, 0x73, 0x2b, 0x93, 0x0b,
  0xa3, 0x4b, 0x7b, 0x73, 0x03, 0x02, 0xca, 0x0a, 0xc2, 0xc2, 0xd2, 0x9a,
  0x20, 0x00, 0x6b, 0xb0, 0x21, 0x58, 0x36, 0x10, 0xf2, 0x60, 0x06, 0x7a,
  0x30, 0x0f, 0x1b, 0x0a, 0x74, 0x88, 0x07, 0x00, 0xa0, 0x87, 0x2a, 0x6c,
  0x6c, 0x76, 0x6d, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x82, 0xa0,
  0x0a, 0x19, 0x9e, 0x8b, 0x5d, 0x99, 0xdc, 0x5c, 0xda, 0x9b, 0xdb, 0x94,
  0x80, 0x68, 0x42, 0x86, 0xe7, 0x62, 0x17, 0xc6, 0x66, 0x57, 0x26, 0x37,
  0x25, 0x30, 0xea, 0x90, 0xe1, 0xb9, 0xcc, 0xa1, 0x85, 0x91, 0x95, 0xc9,
  0x35, 0xbd, 0x91, 0x95, 0xb1, 0x4d, 0x09, 0x92, 0x32, 0x64, 0x78, 0x2e,
  0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x53, 0x02, 0x31,
  0xa8, 0x44, 0x86, 0xe7, 0x42, 0x97, 0x07, 0x57, 0x16, 0xe4, 0xe6, 0xf6,
  0x46, 0x17, 0x46, 0x97, 0xf6, 0xe6, 0x36, 0x37, 0x45, 0x30, 0x87, 0x75,
  0xa8, 0x43, 0x86, 0xe7, 0x52, 0xe6, 0x46, 0x27, 0x97, 0x07, 0xf5, 0x96,
  0xe6, 0x46, 0x37, 0x37, 0x45, 0x78, 0x07, 0x7a, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x8c, 0xcc, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x74, 0x60, 0x07, 0x37, 0x90, 0x87, 0x72, 0x98, 0x87, 0x77, 0xa8,
  0x07, 0x79, 0x18, 0x87, 0x72, 0x70, 0x83, 0x70, 0xa0, 0x07, 0x7a, 0x90,
  0x87, 0x74, 0x10, 0x87, 0x7a, 0xa0, 0x87, 0x72, 0x00, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x86, 0x00, 0x00, 0x00, 0xf6, 0x20, 0x06, 0xc3,
  0xe5, 0x3b, 0x8f, 0x2f, 0x44, 0x04, 0x30, 0x11, 0x21, 0xd0, 0x0c, 0x0b,
  0xf1, 0x39, 0x51, 0x89, 0x04, 0x3e, 0xe7, 0x34, 0xd2, 0x04, 0x34, 0x93,
  0x64, 0x06, 0xdb, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x01, 0x55, 0x14, 0x44,
  0x54, 0x3a, 0xc0, 0x50, 0x12, 0x06, 0x20, 0x60, 0x7e, 0x71, 0xdb, 0xe6,
  0x20, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0x44, 0x44, 0x13, 0x02, 0x44, 0x98,
  0x5f, 0xdc, 0xb6, 0x15, 0x6c, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x04, 0x54,
  0x51, 0x10, 0x51, 0xe9, 0x00, 0x43, 0x49, 0x18, 0x80, 0x80, 0xf9, 0xc8,
  0x6d, 0x5b, 0xc4, 0x1f, 0x0c, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x11, 0xc0,
  0x44, 0x84, 0x40, 0x33, 0x2c, 0xc4, 0xe7, 0x44, 0x25, 0x12, 0xf8, 0xd2,
  0x14, 0x51, 0xc2, 0xe4, 0xaf, 0x00, 0x36, 0x45, 0x80, 0x80, 0x34, 0x86,
  0x26, 0x08, 0xc4, 0x42, 0x44, 0xc0, 0x84, 0x38, 0x0d, 0x3b, 0x45, 0x94,
  0x30, 0x51, 0x11, 0x61, 0x0d, 0xd6, 0x70, 0xf9, 0xce, 0xe3, 0x4f, 0xc4,
  0x35, 0x51, 0x11, 0xc1, 0x4e, 0x4e, 0x44, 0xf8, 0xc5, 0x6d, 0x97, 0x44,
  0x1f, 0x90, 0xf1, 0xae, 0x37, 0xdc, 0x35, 0x96, 0x97, 0xc3, 0xf4, 0x32,
  0x32, 0xec, 0x26, 0xb3, 0xcb, 0xc6, 0xb7, 0x9c, 0x99, 0x16, 0xbb, 0xc6,
  0xec, 0xf0, 0x7c, 0xee, 0x92, 0x5e, 0xa9, 0x65, 0x3c, 0xbd, 0x2e, 0x2f,
  0xcb, 0x88, 0x3c, 0x7b, 0x79, 0x4c, 0x7f, 0xcb, 0x79, 0x66, 0xf6, 0x3b,
  0x4c, 0x67, 0x81, 0x68, 0x3e, 0x90, 0xcf, 0x06, 0x12, 0xce, 0x69, 0xa4,
  0x09, 0x68, 0x26, 0xa9, 0x04, 0xce, 0x20, 0xf0, 0x93, 0x86, 0xdd, 0xe4,
  0x77, 0xdb, 0x59, 0x6f, 0x8b, 0xcb, 0x72, 0x61, 0xdd, 0x6c, 0x2e, 0xcb,
  0x81, 0xc0, 0x99, 0xf5, 0x47, 0x92, 0x5e, 0x85, 0x75, 0xb3, 0xb9, 0x2c,
  0x07, 0x36, 0x81, 0xc0, 0x60, 0x05, 0xcc, 0x41, 0xe0, 0x27, 0x2d, 0xbb,
  0xc9, 0x65, 0x39, 0x35, 0x2c, 0x3f, 0x97, 0xe9, 0x40, 0xe0, 0xcc, 0xfa,
  0x23, 0x49, 0xaf, 0xd4, 0x32, 0x9e, 0x5e, 0x97, 0x97, 0x65, 0x44, 0xa0,
  0xf5, 0x47, 0xb2, 0x97, 0xc7, 0xf4, 0xb7, 0x1c, 0xd8, 0x24, 0xc1, 0x66,
  0x40, 0x20, 0x10, 0x18, 0x2c, 0x80, 0x36, 0x08, 0xfc, 0xa6, 0xe3, 0xb2,
  0xbb, 0x0c, 0x04, 0xce, 0xaa, 0xd2, 0x70, 0x9e, 0x2e, 0x0f, 0x8f, 0xd3,
  0xee, 0x73, 0x70, 0x3c, 0x2e, 0xb3, 0xcb, 0xf2, 0x30, 0x3d, 0xfd, 0x76,
  0x4f, 0xe9, 0xf2, 0xfa, 0x98, 0x5e, 0x97, 0x97, 0x81, 0xc0, 0xa0, 0x31,
  0x80, 0xc1, 0x70, 0xf9, 0xce, 0xe3, 0x4f, 0x11, 0x20, 0x10, 0x2b, 0x80,
  0xf9, 0xd2, 0x14, 0x51, 0xc2, 0xe4, 0xaf, 0x00, 0x96, 0x02, 0xd8, 0xe2,
  0x00, 0x83, 0x25, 0x50, 0xc3, 0xe5, 0x3b, 0x8f, 0x1f, 0x50, 0x45, 0x41,
  0x44, 0xa5, 0x03, 0x0c, 0x7e, 0x71, 0xdb, 0xb6, 0xe0, 0x0c, 0x97, 0xef,
  0x3c, 0xfe, 0xe0, 0x4c, 0xb7, 0x5f, 0xdc, 0xb6, 0x1d, 0x6c, 0xc3, 0xe5,
  0x3b, 0x8f, 0x3f, 0x20, 0xd2, 0x03, 0x4c, 0xc2, 0xb1, 0x02, 0x98, 0x24,
  0x36, 0x03, 0x71, 0xf9, 0xc8, 0x6d, 0x1b, 0x02, 0x18, 0x0c, 0x97, 0xef,
  0x3c, 0xfe, 0x80, 0x48, 0x0f, 0x30, 0x09, 0xc7, 0x0a, 0x60, 0x52, 0x87,
  0x30, 0x44, 0x23, 0x21, 0x4e, 0x23, 0xf9, 0xc8, 0x6d, 0x17, 0x81, 0x15,
  0xf8, 0x49, 0xc3, 0xf9, 0x63, 0xd9, 0x5d, 0x96, 0x87, 0xe9, 0xe9, 0xb7,
  0x1b, 0x08, 0xcc, 0x06, 0xb1, 0x58, 0x6d, 0x41, 0xb8, 0x01, 0x19, 0xef,
  0x7a, 0xc3, 0x5d, 0x63, 0x79, 0x39, 0x4c, 0x2f, 0x23, 0xc3, 0x6e, 0x32,
  0xbb, 0x6c, 0x7c, 0xcb, 0x99, 0x69, 0xb1, 0x6b, 0xcc, 0x0e, 0xcf, 0xe7,
  0x2e, 0xe9, 0x55, 0x58, 0x37, 0x9b, 0xcb, 0x72, 0x9e, 0x99, 0xfd, 0x0e,
  0xd3, 0x7d, 0xa6, 0xf0, 0x0c, 0x97, 0xef, 0x3c, 0x3e, 0xd5, 0x00, 0x11,
  0xe6, 0x17, 0xb7, 0x0d, 0x61, 0x20, 0x00, 0x00, 0xb5, 0x01, 0x00, 0x00,
  0x13, 0x04, 0x49, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00,
  0x04, 0x94, 0x5d, 0x01, 0x0b, 0xcc, 0x00, 0x14, 0x57, 0x91, 0x0a, 0x94,
  0xa8, 0x40, 0x0d, 0x14, 0x62, 0x40, 0x15, 0x14, 0x47, 0xb9, 0x95, 0x4c,
  0xe9, 0x0a, 0x94, 0x61, 0x00, 0x4d, 0xe5, 0x51, 0x02, 0x23, 0x00, 0x34,
  0x8c, 0x11, 0x80, 0x20, 0x08, 0x82, 0x60, 0x30, 0x46, 0x00, 0x82, 0x20,
  0x88, 0xff, 0xc2, 0x18, 0x01, 0x08, 0x82, 0x20, 0x08, 0x0a, 0x63, 0x04,
  0x20, 0x08, 0xe3, 0xe1, 0x18, 0xd0, 0x32, 0x03, 0x30, 0x02, 0x40, 0xc3,
  0x0c, 0xc0, 0x18, 0x01, 0x08, 0x82, 0x20, 0xfc, 0x8d, 0x00, 0x00, 0x00,
  0xf4, 0x0a, 0xc1, 0x20, 0x57, 0x38, 0x06, 0xc1, 0x42, 0x31, 0xe8, 0x15,
  0x9a, 0x31, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x6c, 0x40, 0x0a, 0x5d,
  0x30, 0x13, 0x41, 0x06, 0xc0, 0x44, 0x0a, 0x23, 0x06, 0x06, 0x00, 0x82,
  0x60, 0xb0, 0xb5, 0x02, 0x07, 0x8d, 0x18, 0x18, 0x00, 0x08, 0x82, 0xc1,
  0xe6, 0x0a, 0x9d, 0x34, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x1b, 0x2c,
  0x74, 0xd2, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x6c, 0xb1, 0xe0, 0x51,
  0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x90, 0xcd, 0x02, 0x19, 0x18, 0xa5,
  0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0x23,
  0x06, 0x07, 0x00, 0x82, 0x60, 0x60, 0xe1, 0x02, 0x1a, 0x28, 0xa0, 0x30,
  0x9a, 0x10, 0x08, 0xc3, 0x0d, 0x01, 0x2a, 0x80, 0xc1, 0x2c, 0x03, 0x12,
  0x04, 0xb3, 0x04, 0xc2, 0x40, 0xc5, 0xb0, 0x17, 0x06, 0x1a, 0x04, 0x03,
  0x15, 0xc3, 0x5e, 0x18, 0x6a, 0x10, 0x0c, 0x54, 0x0c, 0x7b, 0x61, 0xb0,
  0x41, 0x30, 0x50, 0x01, 0xa4, 0x88, 0x01, 0x16, 0xc1, 0x40, 0xc5, 0x10,
  0x22, 0x06, 0x1b, 0x04, 0x03, 0x15, 0x43, 0x88, 0x18, 0x6e, 0x10, 0x0c,
  0x54, 0x0c, 0x21, 0x62, 0xc0, 0x41, 0x30, 0xc7, 0xd0, 0x1d, 0xb0, 0x30,
  0xc7, 0x10, 0x1c, 0xb5, 0x30, 0xc7, 0x10, 0x1c, 0xb0, 0x50, 0xc7, 0x2d,
  0x5c, 0x05, 0x6e, 0x00, 0x25, 0xc4, 0x01, 0x8c, 0x18, 0x1c, 0x00, 0x08,
  0x82, 0x81, 0x85, 0x0e, 0x78, 0xa0, 0xdd, 0xc2, 0x68, 0x42, 0x00, 0x14,
  0x11, 0x54, 0x11, 0x42, 0x8d, 0x18, 0x18, 0x00, 0x08, 0x82, 0x81, 0x1b,
  0x84, 0xc3, 0x1e, 0x84, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x78,
  0xe9, 0x60, 0x07, 0xc1, 0xb0, 0x07, 0xa3, 0x09, 0x01, 0x60, 0xc1, 0x19,
  0xc8, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x3c, 0x76, 0xc8, 0x03,
  0xa2, 0xf0, 0x83, 0xd1, 0x84, 0x00, 0xb0, 0x40, 0x0d, 0xe4, 0x33, 0x62,
  0x70, 0x00, 0x20, 0x08, 0x06, 0x99, 0x3c, 0x8c, 0x42, 0x19, 0xec, 0xc2,
  0x68, 0x42, 0x00, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0x46, 0x0f,
  0xa5, 0x70, 0x06, 0xe3, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30,
  0x9a, 0x30, 0x08, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x90, 0xe1, 0x43,
  0x2a, 0xac, 0xc1, 0x3a, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c,
  0x26, 0x0c, 0xc2, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x64, 0xfc, 0xd0,
  0x0a, 0x6f, 0x90, 0x0e, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3,
  0x09, 0x83, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x19, 0x48, 0xc4,
  0xc2, 0x1c, 0xc8, 0xc3, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68,
  0xc2, 0x20, 0xdc, 0x1c, 0x0c, 0x65, 0x81, 0x1f, 0xc0, 0xc7, 0x02, 0x0c,
  0x3e, 0x87, 0x07, 0x43, 0x99, 0x10, 0xd0, 0xc7, 0x82, 0x54, 0x90, 0x8f,
  0x05, 0xa9, 0x00, 0x9f, 0xdb, 0x83, 0xa1, 0xac, 0x08, 0xe8, 0x63, 0x43,
  0x20, 0x1f, 0xdb, 0x4e, 0x41, 0x3e, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60,
  0x00, 0x06, 0x2b, 0x71, 0x0b, 0x81, 0x0d, 0x81, 0x7c, 0xee, 0x0f, 0x86,
  0xb2, 0x60, 0x15, 0xe0, 0x63, 0x81, 0x18, 0xc0, 0xc7, 0x82, 0x84, 0x3e,
  0x16, 0xd4, 0x82, 0x7c, 0x2c, 0xa8, 0x05, 0xf8, 0x18, 0x12, 0xc8, 0xc7,
  0x6c, 0x21, 0x88, 0x8f, 0x25, 0x64, 0x20, 0x9f, 0x11, 0x03, 0x04, 0x00,
  0x41, 0x30, 0x50, 0x03, 0x99, 0x40, 0x87, 0x30, 0x10, 0x02, 0x5b, 0xca,
  0x40, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xa0, 0x06, 0x34, 0xa1,
  0x0e, 0x62, 0x40, 0x04, 0xd6, 0x98, 0x81, 0x7c, 0x46, 0x0c, 0x10, 0x00,
  0x04, 0xc1, 0x40, 0x0d, 0x6c, 0x82, 0x1d, 0xc6, 0xc0, 0x08, 0x4c, 0x0c,
  0x56, 0x21, 0x3e, 0x16, 0x7c, 0xf0, 0xb1, 0xe0, 0x80, 0x8f, 0x91, 0x41,
  0x2b, 0xc4, 0xc7, 0x82, 0x30, 0x80, 0x8f, 0x05, 0x08, 0x7c, 0xcc, 0x0c,
  0x5e, 0x21, 0x3e, 0x16, 0x8c, 0x01, 0x7c, 0x2c, 0x48, 0xe0, 0x33, 0x62,
  0xb0, 0x00, 0x20, 0x08, 0x06, 0x62, 0x30, 0x16, 0xef, 0x70, 0x10, 0xc1,
  0x41, 0x04, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x00, 0x06, 0x65, 0xf1,
  0x0e, 0x81, 0x05, 0x89, 0x7c, 0xec, 0x10, 0xe4, 0x63, 0xc5, 0x20, 0x9f,
  0x4d, 0x0e, 0xbf, 0xc0, 0x13, 0x3c, 0x31, 0x6c, 0x40, 0x04, 0xe9, 0x40,
  0x00, 0x9b, 0x1c, 0xc0, 0xa1, 0x27, 0xc2, 0x62, 0xd8, 0x80, 0x08, 0x58,
  0x61, 0x00, 0x36, 0x39, 0x84, 0x83, 0x4f, 0xf0, 0xc4, 0xb0, 0x01, 0x11,
  0xfc, 0x04, 0x01, 0x6c, 0x72, 0x10, 0x87, 0x9f, 0x10, 0x8b, 0x61, 0x03,
  0x22, 0x20, 0x8b, 0x01, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03, 0x38,
  0x30, 0x8b, 0x90, 0x40, 0x87, 0x11, 0x03, 0xaa, 0x00, 0x41, 0x30, 0x30,
  0x03, 0xb6, 0xb8, 0x87, 0xe0, 0x26, 0xfa, 0x21, 0x2c, 0xca, 0x22, 0x2c,
  0x7c, 0xa1, 0x17, 0x78, 0x41, 0x1d, 0x90, 0xc3, 0x78, 0x07, 0x72, 0xa0,
  0x62, 0x21, 0x63, 0x08, 0x81, 0x58, 0x8c, 0x21, 0x08, 0x67, 0x31, 0x86,
  0x30, 0x88, 0x05, 0x21, 0xcb, 0x18, 0x43, 0x08, 0xcc, 0x62, 0x0c, 0x41,
  0x58, 0x8b, 0x31, 0x84, 0xc1, 0x2c, 0x68, 0x01, 0xc8, 0x70, 0x43, 0xa0,
  0x16, 0x60, 0x30, 0xcb, 0x60, 0x0c, 0xc1, 0x88, 0xc1, 0x01, 0x80, 0x20,
  0x18, 0x64, 0x7c, 0xd1, 0x12, 0xef, 0x10, 0x16, 0xa3, 0x09, 0x01, 0x30,
  0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08,
  0x06, 0x19, 0x68, 0xc4, 0xc4, 0x3c, 0xc4, 0xc5, 0x68, 0x42, 0x00, 0x8c,
  0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x18, 0xd3, 0x0f, 0xf2, 0x31, 0x7f,
  0x08, 0xe2, 0x63, 0x49, 0x20, 0x1f, 0x1b, 0x40, 0x02, 0x3e, 0x76, 0x04,
  0xf2, 0xb1, 0x60, 0x80, 0x8f, 0x31, 0x85, 0x7c, 0x2c, 0x21, 0xe4, 0x63,
  0x81, 0x00, 0x1f, 0x73, 0x10, 0xf9, 0xd8, 0x72, 0xc8, 0xc7, 0x02, 0x01,
  0x3e, 0xb3, 0x04, 0xc4, 0x40, 0xc5, 0xd0, 0x10, 0xce, 0x30, 0x50, 0x31,
  0x34, 0x84, 0x32, 0x0c, 0x54, 0x0c, 0x0d, 0x61, 0x0c, 0x03, 0x15, 0x40,
  0x43, 0xb0, 0xcc, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x19, 0x6d,
  0x94, 0xc5, 0x49, 0xf4, 0xc5, 0x68, 0x42, 0x30, 0x58, 0x60, 0xc8, 0xc7,
  0x04, 0x43, 0x3e, 0x36, 0x18, 0xf2, 0x29, 0x83, 0x35, 0x60, 0xb8, 0x21,
  0x00, 0x03, 0x31, 0x98, 0x65, 0x28, 0x88, 0x60, 0x96, 0xc0, 0x18, 0xa8,
  0x18, 0x60, 0x41, 0x50, 0x8a, 0x81, 0x8a, 0x01, 0x16, 0x04, 0xa5, 0x18,
  0xa8, 0x18, 0x60, 0x41, 0x50, 0x0a, 0x1b, 0x40, 0x02, 0x3e, 0x36, 0x80,
  0x04, 0x7c, 0x6c, 0x00, 0x09, 0xf8, 0x14, 0x49, 0xd0, 0x06, 0x8c, 0x18,
  0x1c, 0x00, 0x08, 0x82, 0x81, 0x35, 0x1e, 0x73, 0x51, 0x13, 0xab, 0x31,
  0x9a, 0x10, 0x08, 0xc3, 0x0d, 0x43, 0x20, 0x06, 0xb3, 0x0c, 0x87, 0x10,
  0xcc, 0x12, 0x20, 0x03, 0x15, 0x83, 0x9e, 0x00, 0xce, 0x31, 0x50, 0x31,
  0xf0, 0x09, 0xe0, 0x1c, 0x03, 0x15, 0x83, 0x9f, 0x00, 0xce, 0x31, 0x62,
  0x70, 0x00, 0x20, 0x08, 0x06, 0x56, 0x7a, 0xe4, 0xc5, 0x4e, 0xc4, 0xc6,
  0x68, 0x42, 0x20, 0x5c, 0x30, 0x94, 0x19, 0x01, 0x7d, 0xcc, 0x10, 0xe8,
  0x63, 0xc6, 0x40, 0x9f, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x90, 0x03,
  0xf1, 0xf0, 0x8b, 0xb1, 0x18, 0x31, 0x70, 0x00, 0x10, 0x04, 0x03, 0x34,
  0x40, 0x8f, 0xb9, 0x08, 0x7c, 0xa2, 0x27, 0xfc, 0x82, 0x18, 0x84, 0xb3,
  0x90, 0x0b, 0x0c, 0x07, 0x02, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00,
  0x56, 0x85, 0x75, 0x88, 0xf4, 0x00, 0x93, 0x70, 0xac, 0x00, 0x26, 0x75,
  0x08, 0x43, 0x34, 0x12, 0xe2, 0x34, 0x92, 0x4d, 0x1f, 0x81, 0xe1, 0x2f,
  0x91, 0xff, 0x1c, 0x27, 0x80, 0xf8, 0x4b, 0xe4, 0x3f, 0x47, 0x5d, 0xdb,
  0x69, 0x40, 0xe1, 0x23, 0x34, 0xde, 0x1b, 0x69, 0x80, 0xf1, 0x99, 0xc0,
  0x60, 0xf7, 0x76, 0x26, 0xa5, 0x00, 0xb6, 0x38, 0xc0, 0xe0, 0xd7, 0x3e,
  0xdd, 0xfb, 0xd4, 0x33, 0x39, 0xb4, 0xa1, 0x49, 0x29, 0x80, 0x2d, 0x0e,
  0x30, 0xf8, 0xb5, 0x4f, 0xf7, 0x3e, 0xf5, 0x4c, 0x4e, 0x6d, 0x95, 0x01,
  0x45, 0x0b, 0x34, 0x36, 0x6e, 0xeb, 0x01, 0x55, 0x8a, 0x5c, 0xc4, 0xc2,
  0x39, 0x8b, 0x13, 0xf9, 0xb4, 0xbf, 0x08, 0x92, 0x04, 0xf8, 0x08, 0x6d,
  0xec, 0x01, 0x55, 0x8a, 0x5c, 0xc4, 0xc2, 0x39, 0x8b, 0x13, 0xf9, 0xb4,
  0xbf, 0x08, 0x92, 0x04, 0xf8, 0x48, 0x6d, 0xed, 0x01, 0x55, 0x8a, 0x5c,
  0xc4, 0xc2, 0x39, 0x8b, 0x13, 0xf9, 0xb4, 0xbf, 0x08, 0x92, 0x04, 0xf8,
  0x88, 0x6d, 0xb0, 0x01, 0x85, 0x8f, 0xd0, 0xb9, 0x6d, 0xad, 0x01, 0x85,
  0x8f, 0xd8, 0x79, 0x6d, 0xb2, 0x01, 0x85, 0x8f, 0xd8, 0x39, 0x7e, 0x01,
  0x92, 0xbf, 0x44, 0xfe, 0x73, 0xd4, 0xb5, 0xff, 0x44, 0xc4, 0x41, 0x00,
  0x03, 0x11, 0x59, 0x6e, 0x40, 0xe1, 0x23, 0x74, 0xce, 0xdb, 0xd8, 0xb2,
  0x02, 0x98, 0xd8, 0x0c, 0xc4, 0xe5, 0xd3, 0xbc, 0x89, 0x06, 0x18, 0x9f,
  0x09, 0x0c, 0xb7, 0x6d, 0xaf, 0x01, 0xc5, 0x2a, 0x41, 0xd1, 0x74, 0x06,
  0x89, 0xbf, 0x38, 0xce, 0x43, 0x5c, 0xc8, 0x74, 0x05, 0x92, 0xbf, 0x38,
  0xce, 0x43, 0x5c, 0xc8, 0xe4, 0x2f, 0x8e, 0xf3, 0x10, 0x17, 0x32, 0x19,
  0xd8, 0x93, 0x02, 0xd8, 0xe2, 0x00, 0x83, 0x5f, 0xfb, 0x74, 0xef, 0x23,
  0xb4, 0x85, 0x3d, 0x29, 0x80, 0x2d, 0x0e, 0x30, 0xf8, 0xb5, 0x4f, 0xf7,
  0x3e, 0x52, 0x9b, 0xd8, 0x93, 0x02, 0xd8, 0xe2, 0x00, 0x83, 0x5f, 0xfb,
  0x74, 0xef, 0x23, 0xb6, 0x81, 0x06, 0x18, 0x9f, 0x09, 0x0c, 0x77, 0x6e,
  0x58, 0x53, 0x87, 0x48, 0x0f, 0x30, 0x09, 0xc7, 0x0a, 0x60, 0x92, 0xd8,
  0x0c, 0xc4, 0x55, 0xdf, 0xb6, 0x1b, 0x50, 0xf8, 0x88, 0xad, 0xd3, 0x76,
  0x35, 0x75, 0x88, 0xf4, 0x00, 0x93, 0x70, 0xac, 0x00, 0x26, 0x89, 0xcd,
  0x40, 0x5c, 0x75, 0x7e, 0x08, 0x8b, 0xff, 0x0b, 0x11, 0x32, 0xfd, 0xc4,
  0x60, 0x10, 0x36, 0xb5, 0x70, 0x4e, 0x23, 0x4d, 0x40, 0x33, 0x49, 0x38,
  0x6f, 0x75, 0xca, 0x46, 0x15, 0x05, 0x11, 0x95, 0x0e, 0x30, 0x58, 0x76,
  0x00, 0x81, 0xf8, 0x74, 0x6e, 0x64, 0x50, 0x8a, 0x5c, 0xc4, 0xc2, 0x39,
  0x8b, 0x13, 0xf9, 0xf4, 0xee, 0x23, 0xb4, 0x95, 0x41, 0x29, 0x72, 0x11,
  0x0b, 0xe7, 0x2c, 0x4e, 0xe4, 0xd3, 0xbb, 0x8f, 0xd4, 0x66, 0x06, 0xa5,
  0xc8, 0x45, 0x2c, 0x9c, 0xb3, 0x38, 0x91, 0x4f, 0xef, 0x3e, 0x62, 0x5b,
  0x1a, 0x93, 0x02, 0xd8, 0xe2, 0x00, 0x83, 0x5f, 0xfb, 0x74, 0x6f, 0xd6,
  0x01, 0x4f, 0x0a, 0x60, 0x8b, 0x03, 0x0c, 0x3e, 0xed, 0xd7, 0xba, 0x8f,
  0xd0, 0x76, 0x1d, 0xf0, 0xa4, 0x00, 0xb6, 0x38, 0xc0, 0xe0, 0xd3, 0x7e,
  0xad, 0xfb, 0x48, 0x6d, 0xd8, 0x01, 0x4f, 0x0a, 0x60, 0x8b, 0x03, 0x0c,
  0x3e, 0xed, 0xd7, 0xba, 0x8f, 0xd8, 0xd6, 0x1b, 0x30, 0xf8, 0x08, 0x6d,
  0xbe, 0x01, 0x83, 0x8f, 0xd4, 0xf6, 0x1b, 0x30, 0xf8, 0x88, 0x6d, 0xaa,
  0x01, 0x85, 0x8f, 0xd4, 0x39, 0x6d, 0xe1, 0x01, 0x4e, 0x0a, 0x60, 0x8b,
  0x03, 0x0c, 0x3e, 0xed, 0xdb, 0x3e, 0x42, 0x9b, 0x78, 0x80, 0x93, 0x02,
  0xd8, 0xe2, 0x00, 0x83, 0x4f, 0xfb, 0xb6, 0x8f, 0xd4, 0x66, 0x85, 0x75,
  0x88, 0xf4, 0x00, 0x93, 0x70, 0xac, 0x00, 0x26, 0x75, 0x08, 0x43, 0x34,
  0x12, 0xe2, 0x34, 0x52, 0xcd, 0xdb, 0x78, 0x80, 0x93, 0x02, 0xd8, 0xe2,
  0x00, 0x83, 0x4f, 0xfb, 0xb6, 0x8f, 0xd8, 0x16, 0x1b, 0x50, 0xf8, 0x48,
  0x9d, 0xdf, 0x77, 0x40, 0xf9, 0xbf, 0x10, 0x21, 0xd3, 0x4f, 0x0c, 0x06,
  0xe1, 0x2f, 0x8e, 0xf3, 0x10, 0x17, 0x32, 0x99, 0x6e, 0x40, 0xe1, 0x23,
  0x75, 0xde, 0x9b, 0x1c, 0xb3, 0x51, 0x45, 0x41, 0x44, 0xa5, 0x03, 0x0c,
  0xf6, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
