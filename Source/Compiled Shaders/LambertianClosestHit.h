#if 0
;
; Note: shader requires additional functionality:
;       UAVs at every shader stage
;
;
; Buffer Definitions:
;
; cbuffer Constants
; {
;
;   struct Constants
;   {
;
;       struct struct.InlineConstantBuffer
;       {
;
;           column_major float4x4 CameraToWorld;      ; Offset:    0
;           float4 SkyTopColor;                       ; Offset:   64
;           float4 SkyBottomColor;                    ; Offset:   80
;           uint RandomFloatCount;                    ; Offset:   96
;           float3 Pad01;                             ; Offset:  100
;           float VertFoVRad;                         ; Offset:  112
;           uint MaxRecursionDepth;                   ; Offset:  116
;           uint RaysPerPixel;                        ; Offset:  120
;           float LambertianAttenuationValue;         ; Offset:  124
;       
;       } Constants                                   ; Offset:    0
;
;   
;   } Constants                                       ; Offset:    0 Size:   128
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; Constants                         cbuffer      NA          NA     CB0            cb0     1
; Scene                             texture     i32         ras      T0             t0     1
; RandomNumberBuffer                    UAV     f32         buf      U0             u1     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%struct.RaytracingAccelerationStructure = type { i32 }
%"class.RWBuffer<float>" = type { float }
%Constants = type { %struct.InlineConstantBuffer }
%struct.InlineConstantBuffer = type { %class.matrix.float.4.4, <4 x float>, <4 x float>, i32, <3 x float>, float, i32, i32, float }
%class.matrix.float.4.4 = type { [4 x <4 x float>] }
%struct.RayPayload = type { <3 x float>, <3 x float>, i32, i32 }
%struct.IntersectionAttributes = type { <3 x float>, <3 x float> }
%dx.types.Handle = type { i8* }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%"class.RWTexture2D<vector<float, 4> >" = type { <4 x float> }
%struct.RayDesc = type { <3 x float>, float, <3 x float>, float }

@"\01?Scene@@3URaytracingAccelerationStructure@@A" = external constant %struct.RaytracingAccelerationStructure, align 4
@"\01?RandomNumberBuffer@@3V?$RWBuffer@M@@A" = external constant %"class.RWBuffer<float>", align 4
@Constants = external constant %Constants

; Function Attrs: nounwind
define void @"\01?LambertianClosestHit@@YAXURayPayload@@UIntersectionAttributes@@@Z"(%struct.RayPayload* noalias nocapture %Payload, %struct.IntersectionAttributes* nocapture readonly %Attributes) #0 {
  %1 = load %struct.RaytracingAccelerationStructure, %struct.RaytracingAccelerationStructure* @"\01?Scene@@3URaytracingAccelerationStructure@@A", align 4
  %2 = load %"class.RWBuffer<float>", %"class.RWBuffer<float>"* @"\01?RandomNumberBuffer@@3V?$RWBuffer@M@@A", align 4
  %3 = load %Constants, %Constants* @Constants, align 4
  %Constants69 = call %dx.types.Handle @dx.op.createHandleForLib.Constants(i32 160, %Constants %3)  ; CreateHandleForLib(Resource)
  %4 = alloca %struct.RayPayload, align 8
  %5 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %Payload, i32 0, i32 2
  %6 = load i32, i32* %5, align 4, !tbaa !56
  %7 = add i32 %6, 1
  store i32 %7, i32* %5, align 4, !tbaa !56
  %8 = getelementptr inbounds %struct.IntersectionAttributes, %struct.IntersectionAttributes* %Attributes, i32 0, i32 0
  %9 = load <3 x float>, <3 x float>* %8, align 4, !tbaa !60
  %10 = extractelement <3 x float> %9, i64 0
  %11 = extractelement <3 x float> %9, i64 1
  %12 = extractelement <3 x float> %9, i64 2
  %13 = getelementptr inbounds %struct.IntersectionAttributes, %struct.IntersectionAttributes* %Attributes, i32 0, i32 1
  %14 = load <3 x float>, <3 x float>* %13, align 4, !tbaa !60
  %15 = extractelement <3 x float> %14, i64 0
  %16 = extractelement <3 x float> %14, i64 1
  %17 = extractelement <3 x float> %14, i64 2
  %ObjectToWorld = call float @dx.op.objectToWorld.f32(i32 151, i32 0, i8 0)  ; ObjectToWorld(row,col)
  %ObjectToWorld46 = call float @dx.op.objectToWorld.f32(i32 151, i32 0, i8 1)  ; ObjectToWorld(row,col)
  %ObjectToWorld47 = call float @dx.op.objectToWorld.f32(i32 151, i32 0, i8 2)  ; ObjectToWorld(row,col)
  %ObjectToWorld49 = call float @dx.op.objectToWorld.f32(i32 151, i32 1, i8 0)  ; ObjectToWorld(row,col)
  %ObjectToWorld50 = call float @dx.op.objectToWorld.f32(i32 151, i32 1, i8 1)  ; ObjectToWorld(row,col)
  %ObjectToWorld51 = call float @dx.op.objectToWorld.f32(i32 151, i32 1, i8 2)  ; ObjectToWorld(row,col)
  %ObjectToWorld53 = call float @dx.op.objectToWorld.f32(i32 151, i32 2, i8 0)  ; ObjectToWorld(row,col)
  %ObjectToWorld54 = call float @dx.op.objectToWorld.f32(i32 151, i32 2, i8 1)  ; ObjectToWorld(row,col)
  %ObjectToWorld55 = call float @dx.op.objectToWorld.f32(i32 151, i32 2, i8 2)  ; ObjectToWorld(row,col)
  %18 = fmul fast float %ObjectToWorld, %15
  %FMad36 = call float @dx.op.tertiary.f32(i32 46, float %ObjectToWorld46, float %16, float %18)  ; FMad(a,b,c)
  %FMad35 = call float @dx.op.tertiary.f32(i32 46, float %ObjectToWorld47, float %17, float %FMad36)  ; FMad(a,b,c)
  %19 = fmul fast float %ObjectToWorld49, %15
  %FMad33 = call float @dx.op.tertiary.f32(i32 46, float %ObjectToWorld50, float %16, float %19)  ; FMad(a,b,c)
  %FMad32 = call float @dx.op.tertiary.f32(i32 46, float %ObjectToWorld51, float %17, float %FMad33)  ; FMad(a,b,c)
  %20 = fmul fast float %ObjectToWorld53, %15
  %FMad30 = call float @dx.op.tertiary.f32(i32 46, float %ObjectToWorld54, float %16, float %20)  ; FMad(a,b,c)
  %FMad29 = call float @dx.op.tertiary.f32(i32 46, float %ObjectToWorld55, float %17, float %FMad30)  ; FMad(a,b,c)
  %21 = call float @dx.op.dot3.f32(i32 55, float %FMad35, float %FMad32, float %FMad29, float %FMad35, float %FMad32, float %FMad29)  ; Dot3(ax,ay,az,bx,by,bz)
  %Rsqrt = call float @dx.op.unary.f32(i32 25, float %21)  ; Rsqrt(value)
  %.i0 = fmul fast float %Rsqrt, %FMad35
  %.i1 = fmul fast float %Rsqrt, %FMad32
  %.i2 = fmul fast float %Rsqrt, %FMad29
  %DispatchRaysIndex24 = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 1)  ; DispatchRaysIndex(col)
  %DispatchRaysDimensions20 = call i32 @dx.op.dispatchRaysDimensions.i32(i32 146, i8 0)  ; DispatchRaysDimensions(col)
  %22 = mul i32 %DispatchRaysDimensions20, %DispatchRaysIndex24
  %DispatchRaysIndex17 = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 0)  ; DispatchRaysIndex(col)
  %23 = add i32 %22, %DispatchRaysIndex17
  %24 = mul i32 %23, 3
  %25 = add i32 %24, %7
  %26 = add i32 %6, 2
  %27 = add i32 %26, %24
  %28 = add i32 %6, 3
  %29 = add i32 %28, %24
  %30 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %Constants69, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %31 = extractvalue %dx.types.CBufRet.i32 %30, 0
  %32 = urem i32 %25, %31
  %33 = urem i32 %27, %31
  %34 = urem i32 %29, %31
  %35 = call %dx.types.Handle @"dx.op.createHandleForLib.class.RWBuffer<float>"(i32 160, %"class.RWBuffer<float>" %2)  ; CreateHandleForLib(Resource)
  %BufferLoad27 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %35, i32 %32, i32 undef)  ; BufferLoad(srv,index,wot)
  %36 = extractvalue %dx.types.ResRet.f32 %BufferLoad27, 0
  %BufferLoad26 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %35, i32 %33, i32 undef)  ; BufferLoad(srv,index,wot)
  %37 = extractvalue %dx.types.ResRet.f32 %BufferLoad26, 0
  %BufferLoad = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %35, i32 %34, i32 undef)  ; BufferLoad(srv,index,wot)
  %38 = extractvalue %dx.types.ResRet.f32 %BufferLoad, 0
  %.i076 = fadd fast float %36, %.i0
  %.i177 = fadd fast float %37, %.i1
  %.i278 = fadd fast float %38, %.i2
  %39 = call float @dx.op.dot3.f32(i32 55, float %.i076, float %.i177, float %.i278, float %.i076, float %.i177, float %.i278)  ; Dot3(ax,ay,az,bx,by,bz)
  %Rsqrt28 = call float @dx.op.unary.f32(i32 25, float %39)  ; Rsqrt(value)
  %.i079 = fmul fast float %Rsqrt28, %.i076
  %.i180 = fmul fast float %Rsqrt28, %.i177
  %.i281 = fmul fast float %.i278, %Rsqrt28
  %.upto084 = insertelement <3 x float> undef, float %.i079, i32 0
  %.upto185 = insertelement <3 x float> %.upto084, float %.i180, i32 1
  %40 = insertelement <3 x float> %.upto185, float %.i281, i32 2
  %41 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %Payload, i32 0, i32 1
  store <3 x float> %40, <3 x float>* %41, align 4, !tbaa !60
  %42 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %Payload, i32 0, i32 3
  %43 = load i32, i32* %42, align 4, !tbaa !56
  %44 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %Constants69, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %45 = extractvalue %dx.types.CBufRet.i32 %44, 1
  %46 = icmp ult i32 %43, %45
  br i1 %46, label %47, label %67

; <label>:47                                      ; preds = %0
  %48 = fmul fast float %ObjectToWorld53, %10
  %FMad39 = call float @dx.op.tertiary.f32(i32 46, float %ObjectToWorld54, float %11, float %48)  ; FMad(a,b,c)
  %FMad38 = call float @dx.op.tertiary.f32(i32 46, float %ObjectToWorld55, float %12, float %FMad39)  ; FMad(a,b,c)
  %ObjectToWorld68 = call float @dx.op.objectToWorld.f32(i32 151, i32 2, i8 3)  ; ObjectToWorld(row,col)
  %49 = fadd fast float %FMad38, %ObjectToWorld68
  %50 = fmul fast float %ObjectToWorld49, %10
  %FMad42 = call float @dx.op.tertiary.f32(i32 46, float %ObjectToWorld50, float %11, float %50)  ; FMad(a,b,c)
  %FMad41 = call float @dx.op.tertiary.f32(i32 46, float %ObjectToWorld51, float %12, float %FMad42)  ; FMad(a,b,c)
  %ObjectToWorld64 = call float @dx.op.objectToWorld.f32(i32 151, i32 1, i8 3)  ; ObjectToWorld(row,col)
  %51 = fadd fast float %FMad41, %ObjectToWorld64
  %52 = fmul fast float %ObjectToWorld, %10
  %FMad45 = call float @dx.op.tertiary.f32(i32 46, float %ObjectToWorld46, float %11, float %52)  ; FMad(a,b,c)
  %FMad44 = call float @dx.op.tertiary.f32(i32 46, float %ObjectToWorld47, float %12, float %FMad45)  ; FMad(a,b,c)
  %ObjectToWorld60 = call float @dx.op.objectToWorld.f32(i32 151, i32 0, i8 3)  ; ObjectToWorld(row,col)
  %53 = fadd fast float %FMad44, %ObjectToWorld60
  %54 = add i32 %43, 1
  %55 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %4, i32 0, i32 0
  %56 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %Payload, i32 0, i32 0
  %57 = load <3 x float>, <3 x float>* %56, align 4
  store <3 x float> %57, <3 x float>* %55, align 8
  %58 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %4, i32 0, i32 1
  store <3 x float> %40, <3 x float>* %58, align 4
  %59 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %4, i32 0, i32 2
  store i32 %7, i32* %59, align 8
  %60 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %4, i32 0, i32 3
  store i32 %54, i32* %60, align 4
  %InstanceID = call i32 @dx.op.instanceID.i32(i32 141)  ; InstanceID()
  %61 = xor i32 %InstanceID, -1
  %62 = call %dx.types.Handle @dx.op.createHandleForLib.struct.RaytracingAccelerationStructure(i32 160, %struct.RaytracingAccelerationStructure %1)  ; CreateHandleForLib(Resource)
  call void @dx.op.traceRay.struct.RayPayload(i32 157, %dx.types.Handle %62, i32 5, i32 %61, i32 0, i32 1, i32 0, float %53, float %51, float %49, float 0.000000e+00, float %.i079, float %.i180, float %.i281, float 1.000000e+04, %struct.RayPayload* nonnull %4)  ; TraceRay(AccelerationStructure,RayFlags,InstanceInclusionMask,RayContributionToHitGroupIndex,MultiplierForGeometryContributionToShaderIndex,MissShaderIndex,Origin_X,Origin_Y,Origin_Z,TMin,Direction_X,Direction_Y,Direction_Z,TMax,payload)
  %63 = load <3 x float>, <3 x float>* %55, align 8
  store <3 x float> %63, <3 x float>* %56, align 4
  %64 = load <3 x float>, <3 x float>* %58, align 4
  store <3 x float> %64, <3 x float>* %41, align 4
  %65 = load i32, i32* %59, align 8
  store i32 %65, i32* %5, align 4
  %66 = load i32, i32* %60, align 4
  store i32 %66, i32* %42, align 4
  br label %67

; <label>:67                                      ; preds = %47, %0
  ret void
}

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.dispatchRaysIndex.i32(i32, i8) #2

; Function Attrs: nounwind readnone
declare i32 @dx.op.dispatchRaysDimensions.i32(i32, i8) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32, %dx.types.Handle, i32, i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #2

; Function Attrs: nounwind
declare void @dx.op.traceRay.struct.RayPayload(i32, %dx.types.Handle, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, %struct.RayPayload*) #3

; Function Attrs: nounwind readnone
declare i32 @dx.op.instanceID.i32(i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.objectToWorld.f32(i32, i32, i8) #2

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.Constants(i32, %Constants) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @"dx.op.createHandleForLib.class.RWBuffer<float>"(i32, %"class.RWBuffer<float>") #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.struct.RaytracingAccelerationStructure(i32, %struct.RaytracingAccelerationStructure) #1

attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="0" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.typeAnnotations = !{!13, !45}
!dx.entryPoints = !{!51, !53}

!0 = !{!"dxc 1.2"}
!1 = !{i32 1, i32 3}
!2 = !{i32 1, i32 4}
!3 = !{!"lib", i32 6, i32 3}
!4 = !{!5, !8, !11, null}
!5 = !{!6}
!6 = !{i32 0, %struct.RaytracingAccelerationStructure* @"\01?Scene@@3URaytracingAccelerationStructure@@A", !"Scene", i32 0, i32 0, i32 1, i32 16, i32 0, !7}
!7 = !{i32 0, i32 4}
!8 = !{!9}
!9 = !{i32 0, %"class.RWBuffer<float>"* @"\01?RandomNumberBuffer@@3V?$RWBuffer@M@@A", !"RandomNumberBuffer", i32 0, i32 1, i32 1, i32 10, i1 false, i1 false, i1 false, !10}
!10 = !{i32 0, i32 9}
!11 = !{!12}
!12 = !{i32 0, %Constants* @Constants, !"Constants", i32 0, i32 0, i32 1, i32 128, null}
!13 = !{i32 0, %struct.RaytracingAccelerationStructure undef, !14, %"class.RWTexture2D<vector<float, 4> >" undef, !16, %"class.RWBuffer<float>" undef, !18, %struct.InlineConstantBuffer undef, !19, %struct.RayPayload undef, !30, %struct.IntersectionAttributes undef, !35, %struct.RayDesc undef, !38, %Constants undef, !43}
!14 = !{i32 4, !15}
!15 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 4}
!16 = !{i32 16, !17}
!17 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 9}
!18 = !{i32 4, !17}
!19 = !{i32 128, !20, !22, !23, !24, !25, !26, !27, !28, !29}
!20 = !{i32 6, !"CameraToWorld", i32 2, !21, i32 3, i32 0, i32 7, i32 9}
!21 = !{i32 4, i32 4, i32 2}
!22 = !{i32 6, !"SkyTopColor", i32 3, i32 64, i32 7, i32 9}
!23 = !{i32 6, !"SkyBottomColor", i32 3, i32 80, i32 7, i32 9}
!24 = !{i32 6, !"RandomFloatCount", i32 3, i32 96, i32 7, i32 5}
!25 = !{i32 6, !"Pad01", i32 3, i32 100, i32 7, i32 9}
!26 = !{i32 6, !"VertFoVRad", i32 3, i32 112, i32 7, i32 9}
!27 = !{i32 6, !"MaxRecursionDepth", i32 3, i32 116, i32 7, i32 5}
!28 = !{i32 6, !"RaysPerPixel", i32 3, i32 120, i32 7, i32 5}
!29 = !{i32 6, !"LambertianAttenuationValue", i32 3, i32 124, i32 7, i32 9}
!30 = !{i32 36, !31, !32, !33, !34}
!31 = !{i32 6, !"Color", i32 3, i32 0, i32 7, i32 9}
!32 = !{i32 6, !"WorldLastScatterDirection", i32 3, i32 16, i32 7, i32 9}
!33 = !{i32 6, !"IntersectionCount", i32 3, i32 28, i32 7, i32 5}
!34 = !{i32 6, !"RecursionDepth", i32 3, i32 32, i32 7, i32 5}
!35 = !{i32 28, !36, !37}
!36 = !{i32 6, !"ObjectIntersectionPoint", i32 3, i32 0, i32 7, i32 9}
!37 = !{i32 6, !"ObjectSurfaceNormal", i32 3, i32 16, i32 7, i32 9}
!38 = !{i32 32, !39, !40, !41, !42}
!39 = !{i32 6, !"Origin", i32 3, i32 0, i32 7, i32 9}
!40 = !{i32 6, !"TMin", i32 3, i32 12, i32 7, i32 9}
!41 = !{i32 6, !"Direction", i32 3, i32 16, i32 7, i32 9}
!42 = !{i32 6, !"TMax", i32 3, i32 28, i32 7, i32 9}
!43 = !{i32 128, !44}
!44 = !{i32 6, !"Constants", i32 3, i32 0}
!45 = !{i32 1, void (%struct.RayPayload*, %struct.IntersectionAttributes*)* @"\01?LambertianClosestHit@@YAXURayPayload@@UIntersectionAttributes@@@Z", !46}
!46 = !{!47, !49, !50}
!47 = !{i32 1, !48, !48}
!48 = !{}
!49 = !{i32 2, !48, !48}
!50 = !{i32 0, !48, !48}
!51 = !{null, !"", null, !4, !52}
!52 = !{i32 0, i64 65536}
!53 = !{void (%struct.RayPayload*, %struct.IntersectionAttributes*)* @"\01?LambertianClosestHit@@YAXURayPayload@@UIntersectionAttributes@@@Z", !"\01?LambertianClosestHit@@YAXURayPayload@@UIntersectionAttributes@@@Z", null, null, !54}
!54 = !{i32 8, i32 10, i32 6, i32 32, i32 7, i32 24, i32 5, !55}
!55 = !{i32 0}
!56 = !{!57, !57, i64 0}
!57 = !{!"int", !58, i64 0}
!58 = !{!"omnipotent char", !59, i64 0}
!59 = !{!"Simple C/C++ TBAA"}
!60 = !{!58, !58, i64 0}

#endif

const unsigned char LambertianClosestHit[] = {
  0x44, 0x58, 0x42, 0x43, 0x45, 0x3a, 0x3d, 0x0c, 0x26, 0x80, 0x19, 0x81,
  0xae, 0x2c, 0xf6, 0xf2, 0x86, 0xdd, 0x2a, 0x0e, 0x01, 0x00, 0x00, 0x00,
  0xcc, 0x14, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00,
  0x3c, 0x00, 0x00, 0x00, 0xa8, 0x01, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30,
  0x08, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x52, 0x44, 0x41, 0x54, 0x64, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00,
  0x10, 0x01, 0x00, 0x00, 0x4c, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e,
  0x74, 0x73, 0x00, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x00, 0x52, 0x61, 0x6e,
  0x64, 0x6f, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x75, 0x66,
  0x66, 0x65, 0x72, 0x00, 0x01, 0x3f, 0x4c, 0x61, 0x6d, 0x62, 0x65, 0x72,
  0x74, 0x69, 0x61, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x74, 0x48,
  0x69, 0x74, 0x40, 0x40, 0x59, 0x41, 0x58, 0x55, 0x52, 0x61, 0x79, 0x50,
  0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x40, 0x40, 0x55, 0x49, 0x6e, 0x74,
  0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74,
  0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x40, 0x40, 0x40, 0x5a, 0x00,
  0x4c, 0x61, 0x6d, 0x62, 0x65, 0x72, 0x74, 0x69, 0x61, 0x6e, 0x43, 0x6c,
  0x6f, 0x73, 0x65, 0x73, 0x74, 0x48, 0x69, 0x74, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,
  0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x0a, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00,
  0x63, 0x00, 0x0a, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x1c, 0x13, 0x00, 0x00,
  0x63, 0x00, 0x06, 0x00, 0xc7, 0x04, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x03, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x04, 0x13, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0xbe, 0x04, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x5d, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0x20, 0x00, 0x12, 0x60, 0xd9, 0x60, 0x08, 0x02, 0xb0, 0x00,
  0xd5, 0x06, 0xf0, 0x18, 0xfe, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x24, 0x82,
  0x1c, 0xd2, 0x61, 0x1e, 0xc2, 0x41, 0x1c, 0xd8, 0xa1, 0x1c, 0xda, 0x80,
  0x1e, 0xc2, 0x21, 0x1d, 0xd8, 0xa1, 0x0d, 0xc6, 0x21, 0x1c, 0xd8, 0x81,
  0x1d, 0xe6, 0x01, 0x30, 0x87, 0x70, 0x60, 0x87, 0x79, 0x28, 0x07, 0x80,
  0x60, 0x87, 0x72, 0x98, 0x87, 0x79, 0x68, 0x03, 0x78, 0x90, 0x87, 0x72,
  0x18, 0x87, 0x74, 0x98, 0x87, 0x72, 0x68, 0x03, 0x73, 0x80, 0x87, 0x76,
  0x08, 0x07, 0x72, 0x00, 0xcc, 0x21, 0x1c, 0xd8, 0x61, 0x1e, 0xca, 0x01,
  0x20, 0xdc, 0xe1, 0x1d, 0xda, 0xc0, 0x1c, 0xe4, 0x21, 0x1c, 0xda, 0xa1,
  0x1c, 0xda, 0x00, 0x1e, 0xde, 0x21, 0x1d, 0xdc, 0x81, 0x1e, 0xca, 0x41,
  0x1e, 0xda, 0xa0, 0x1c, 0xd8, 0x21, 0x1d, 0xda, 0x01, 0x30, 0x87, 0x70,
  0x60, 0x87, 0x79, 0x28, 0x07, 0x80, 0x70, 0x87, 0x77, 0x68, 0x83, 0x74,
  0x70, 0x07, 0x73, 0x98, 0x87, 0x36, 0x30, 0x07, 0x78, 0x68, 0x83, 0x76,
  0x08, 0x07, 0x7a, 0x40, 0x07, 0xc0, 0x1c, 0xc2, 0x81, 0x1d, 0xe6, 0xa1,
  0x1c, 0x00, 0xc2, 0x1d, 0xde, 0xa1, 0x0d, 0xdc, 0x21, 0x1c, 0xdc, 0x61,
  0x1e, 0xda, 0xc0, 0x1c, 0xe0, 0xa1, 0x0d, 0xda, 0x21, 0x1c, 0xe8, 0x01,
  0x1d, 0x00, 0x73, 0x08, 0x07, 0x76, 0x98, 0x87, 0x72, 0x00, 0x06, 0x77,
  0x78, 0x87, 0x36, 0x90, 0x87, 0x72, 0x08, 0x07, 0x76, 0x48, 0x87, 0x73,
  0x70, 0x87, 0x36, 0x98, 0x07, 0x7a, 0x08, 0x87, 0x71, 0x58, 0x07, 0x80,
  0x98, 0x07, 0x7a, 0x08, 0x87, 0x71, 0x58, 0x87, 0x36, 0x80, 0x07, 0x79,
  0x78, 0x07, 0x7a, 0x28, 0x87, 0x71, 0xa0, 0x87, 0x77, 0x90, 0x87, 0x36,
  0x10, 0x87, 0x7a, 0x30, 0x07, 0x73, 0x28, 0x07, 0x79, 0x68, 0x83, 0x79,
  0x48, 0x07, 0x7d, 0x28, 0x07, 0x00, 0x0e, 0x00, 0xa2, 0x1e, 0xdc, 0x61,
  0x1e, 0xc2, 0xc1, 0x1c, 0xca, 0xa1, 0x0d, 0xcc, 0x01, 0x1e, 0xda, 0xa0,
  0x1d, 0xc2, 0x81, 0x1e, 0xd0, 0x01, 0x30, 0x87, 0x70, 0x60, 0x87, 0x79,
  0x28, 0x07, 0x80, 0xa8, 0x87, 0x79, 0x28, 0x87, 0x36, 0x98, 0x87, 0x77,
  0x30, 0x07, 0x7a, 0x68, 0x03, 0x73, 0x60, 0x87, 0x77, 0x08, 0x07, 0x7a,
  0x00, 0xcc, 0x21, 0x1c, 0xd8, 0x61, 0x1e, 0xca, 0x01, 0xd8, 0x60, 0x10,
  0xff, 0xff, 0xff, 0xff, 0x3f, 0x00, 0x12, 0x50, 0x6d, 0x30, 0x8a, 0xff,
  0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa0, 0x36, 0x10, 0xc6, 0xff, 0xff,
  0xff, 0xff, 0x0f, 0x80, 0xb4, 0x81, 0x38, 0x20, 0xe0, 0x0c, 0x00, 0x00,
  0x49, 0x18, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x13, 0x86, 0x40, 0x18,
  0x26, 0x04, 0xc4, 0x84, 0xa0, 0x98, 0x10, 0x18, 0x13, 0x82, 0x03, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x72, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c,
  0x10, 0xe4, 0xc1, 0x1c, 0x01, 0x18, 0x9c, 0x19, 0x48, 0x53, 0x44, 0x09,
  0x93, 0xbf, 0x02, 0xd8, 0x14, 0x01, 0x02, 0xd2, 0x18, 0x9a, 0x20, 0x10,
  0x0b, 0x11, 0x01, 0x13, 0xe2, 0x34, 0xec, 0x14, 0x51, 0xc2, 0x44, 0x45,
  0x04, 0x0a, 0x00, 0x0a, 0x66, 0x00, 0x66, 0xaa, 0xc6, 0x81, 0x1d, 0xc2,
  0x61, 0x1e, 0xe6, 0xc1, 0x0d, 0x64, 0xe1, 0x16, 0x44, 0xa1, 0x1e, 0xcc,
  0xc1, 0x1c, 0xca, 0x41, 0x1e, 0xf8, 0xc0, 0x1c, 0xd8, 0xe1, 0x1d, 0xc2,
  0x81, 0x1e, 0xfc, 0x00, 0x05, 0x03, 0x11, 0xc3, 0x08, 0xc4, 0x90, 0x04,
  0xc6, 0x59, 0xc2, 0x02, 0x48, 0x92, 0xcf, 0x00, 0x53, 0x84, 0x5c, 0x7e,
  0xb1, 0x38, 0xc0, 0xe4, 0xe3, 0x3e, 0x8e, 0x82, 0x63, 0x18, 0x61, 0x18,
  0x6e, 0x93, 0xa6, 0x88, 0x12, 0x26, 0x5f, 0x6c, 0x16, 0xa4, 0x21, 0x38,
  0xa7, 0x91, 0x26, 0xa0, 0x99, 0x36, 0xaa, 0x28, 0x88, 0x08, 0x25, 0x88,
  0x61, 0x00, 0xc9, 0x00, 0x00, 0xc3, 0x25, 0x9c, 0xd3, 0x48, 0x13, 0xd0,
  0x4c, 0x12, 0x0a, 0x14, 0x5a, 0x46, 0x00, 0x2e, 0x92, 0xa6, 0x88, 0x12,
  0x26, 0x7f, 0x05, 0xb0, 0x14, 0xc0, 0x16, 0x07, 0x18, 0x10, 0x91, 0x24,
  0x00, 0x40, 0xce, 0x75, 0xd2, 0x14, 0x51, 0xc2, 0xe4, 0x8b, 0xcd, 0x44,
  0x44, 0x12, 0x21, 0x4c, 0x88, 0xd3, 0x68, 0xd3, 0x14, 0x21, 0x01, 0x35,
  0x11, 0x12, 0x12, 0x92, 0x84, 0xa0, 0x32, 0x34, 0x4f, 0x44, 0xd2, 0x51,
  0xc3, 0xe5, 0x4f, 0xd8, 0x43, 0x48, 0x3e, 0xb7, 0x51, 0xc5, 0x4a, 0x4c,
  0x3e, 0x72, 0xdb, 0x88, 0x00, 0x00, 0x00, 0x98, 0x23, 0x40, 0xa8, 0xba,
  0x67, 0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9, 0x0f, 0x81, 0x66, 0x58, 0x08,
  0x14, 0x58, 0x85, 0xa0, 0x80, 0x0b, 0x20, 0xac, 0x0c, 0x00, 0x50, 0x91,
  0x76, 0xd3, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0xbf, 0x12, 0xd2, 0x4a,
  0x4c, 0x7e, 0x71, 0xdb, 0xa8, 0x18, 0x86, 0x61, 0x00, 0x4a, 0xc1, 0x01,
  0x17, 0x00, 0x50, 0x57, 0x90, 0x01, 0x18, 0x86, 0x61, 0x18, 0x06, 0xfa,
  0xca, 0x30, 0x00, 0x03, 0x85, 0x25, 0x6a, 0x80, 0x0b, 0x00, 0x00, 0x00,
  0x18, 0x86, 0x61, 0x18, 0x86, 0x61, 0x78, 0x68, 0x2c, 0x02, 0x00, 0x50,
  0x59, 0x8a, 0x01, 0x18, 0x86, 0x81, 0xce, 0x42, 0x0c, 0x00, 0x50, 0x51,
  0x5a, 0x86, 0x0b, 0x58, 0x68, 0x2d, 0xc3, 0x05, 0x10, 0xd4, 0x96, 0xe1,
  0x02, 0x02, 0x7a, 0x07, 0x02, 0xe6, 0x08, 0x82, 0x99, 0xc8, 0x60, 0x1c,
  0xd8, 0x21, 0x1c, 0xe6, 0x61, 0x1e, 0xdc, 0x40, 0x16, 0x6e, 0x81, 0x16,
  0xca, 0x01, 0x1f, 0xe8, 0xa1, 0x1e, 0xe4, 0xa1, 0x1c, 0xe4, 0x80, 0x14,
  0xf8, 0xc0, 0x1e, 0xca, 0x61, 0x1c, 0xe8, 0xe1, 0x1d, 0xe4, 0x81, 0x0f,
  0xcc, 0x81, 0x1d, 0xde, 0x21, 0x1c, 0xe8, 0x81, 0x0d, 0xc0, 0x80, 0x0e,
  0xfc, 0x00, 0x0c, 0xfc, 0x00, 0x05, 0xc6, 0x39, 0xd2, 0x14, 0x51, 0xc2,
  0xe4, 0xaf, 0x00, 0xd6, 0x11, 0x92, 0x80, 0x88, 0x64, 0x48, 0x86, 0x39,
  0x02, 0x50, 0x20, 0x80, 0x92, 0x29, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0,
  0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d,
  0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
  0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
  0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6,
  0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78,
  0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x3a, 0x0f, 0x84, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0xc6,
  0x00, 0x80, 0x49, 0x03, 0x00, 0xe6, 0x0e, 0x00, 0x60, 0xc8, 0x23, 0x01,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07,
  0x03, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21,
  0x8f, 0x06, 0x04, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x43, 0x1e, 0x0d, 0x08, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x86, 0x3c, 0x1d, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x0c, 0x79, 0x3e, 0x20, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x18, 0xf2, 0x84, 0x01, 0x10, 0x00, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0xc6, 0x00, 0x08, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x65, 0x00, 0x04,
  0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x33,
  0x00, 0x02, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21,
  0x4f, 0x1a, 0x00, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc0, 0x90, 0x67, 0x0d, 0x80, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x60, 0xc8, 0xd3, 0x06, 0x40, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x79, 0x03, 0x20, 0x00, 0x04, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x02, 0x01, 0x00, 0x00, 0x00,
  0x1a, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x02, 0x4a, 0xa0, 0x0c, 0x0a,
  0xa1, 0x18, 0x46, 0x00, 0x0a, 0xa4, 0x28, 0x4a, 0xa2, 0x00, 0x05, 0xca,
  0xa1, 0x08, 0x0a, 0x30, 0xa0, 0x40, 0x03, 0x0a, 0x38, 0xa0, 0x14, 0x0a,
  0x39, 0xa0, 0xc0, 0x03, 0x0a, 0x3d, 0xa0, 0xe0, 0x03, 0x0a, 0x3f, 0xa0,
  0x90, 0x0a, 0xa7, 0x80, 0x0a, 0xa3, 0x20, 0x0a, 0x86, 0xea, 0x11, 0x80,
  0x02, 0x04, 0x44, 0x20, 0x79, 0x04, 0x80, 0x96, 0x19, 0x00, 0x72, 0x66,
  0x00, 0x08, 0x9a, 0x01, 0x20, 0x65, 0x06, 0x80, 0xe6, 0x19, 0x00, 0xa2,
  0x67, 0x00, 0x88, 0x98, 0x01, 0xa0, 0x60, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x1e, 0x01, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0xc4, 0x83, 0x0c, 0x6f, 0x0c, 0x24, 0xc6, 0x45, 0x66,
  0x43, 0x10, 0x4c, 0x10, 0x80, 0x68, 0x82, 0x00, 0x48, 0x1b, 0x84, 0x81,
  0x98, 0x20, 0x00, 0xd3, 0x06, 0x61, 0x30, 0x38, 0xb0, 0xa5, 0x89, 0x4d,
  0x10, 0x00, 0x6a, 0xc3, 0x80, 0x24, 0xc4, 0x04, 0x01, 0xa8, 0x26, 0x08,
  0x02, 0xc0, 0x62, 0x6a, 0xac, 0xcc, 0xad, 0x6c, 0x82, 0x00, 0x58, 0x1b,
  0x84, 0xc5, 0xd8, 0x90, 0x2c, 0x4c, 0xb3, 0x2c, 0x83, 0xb3, 0x3c, 0x1b,
  0x02, 0x68, 0x82, 0x50, 0x04, 0x94, 0xa4, 0xc2, 0xdc, 0xc8, 0xde, 0xda,
  0x9c, 0xea, 0xda, 0xc4, 0xca, 0xe4, 0x84, 0xea, 0xcc, 0xcc, 0xca, 0xe4,
  0x26, 0x08, 0xc0, 0x35, 0x41, 0x90, 0x83, 0x36, 0x98, 0x20, 0x00, 0xd8,
  0x06, 0x61, 0xb1, 0x36, 0x2c, 0x8b, 0x34, 0x2d, 0xc3, 0x40, 0x55, 0x55,
  0x75, 0x6d, 0x08, 0xb0, 0x09, 0x02, 0x23, 0x30, 0x19, 0x7a, 0x73, 0x9b,
  0xa3, 0x0b, 0x73, 0xa3, 0x9b, 0x9b, 0x20, 0x00, 0xd9, 0x06, 0x64, 0xd1,
  0xb6, 0x65, 0x19, 0x38, 0x60, 0x43, 0xd0, 0x6d, 0x20, 0xa2, 0xcc, 0x03,
  0x26, 0x08, 0x41, 0x1d, 0x30, 0x40, 0x9b, 0x20, 0x00, 0xda, 0x06, 0x23,
  0x09, 0x03, 0x62, 0x11, 0x03, 0x63, 0x83, 0x60, 0x8c, 0xc1, 0x04, 0x61,
  0x0e, 0xe4, 0x60, 0x83, 0x91, 0x84, 0x01, 0xb1, 0x88, 0x81, 0xb5, 0x41,
  0x70, 0xcc, 0x60, 0x82, 0x40, 0xd0, 0xc1, 0x06, 0xc1, 0x30, 0x83, 0x09,
  0x82, 0x12, 0x07, 0x6c, 0x86, 0xc2, 0xda, 0xca, 0xe4, 0xc2, 0xa8, 0xde,
  0xae, 0xde, 0xe4, 0xd8, 0xc8, 0x26, 0x08, 0xc0, 0xb6, 0x61, 0x30, 0x0c,
  0x36, 0xd8, 0x80, 0x24, 0x6b, 0xc0, 0x06, 0x6d, 0x40, 0x2c, 0x62, 0x60,
  0x71, 0x99, 0x5a, 0xcb, 0xa3, 0x7a, 0x83, 0x1b, 0x7a, 0x63, 0x7b, 0x93,
  0x9b, 0x20, 0x00, 0xdc, 0x06, 0x23, 0x79, 0x03, 0x02, 0x0e, 0xc4, 0xc0,
  0xa2, 0x33, 0xb5, 0x96, 0x27, 0xf4, 0x46, 0x47, 0xf7, 0xd6, 0x36, 0xf4,
  0xc6, 0xf6, 0x26, 0x37, 0x41, 0x00, 0xba, 0x0d, 0x46, 0x22, 0x07, 0xc4,
  0x1c, 0x88, 0x81, 0x45, 0x48, 0x2a, 0xcc, 0x8d, 0xec, 0xad, 0xcd, 0x88,
  0xed, 0x2d, 0x8c, 0x6e, 0xe8, 0xad, 0xce, 0x8d, 0x6e, 0x82, 0x00, 0x78,
  0x13, 0x04, 0xe0, 0xdb, 0x60, 0x24, 0x75, 0x40, 0xd8, 0x81, 0x18, 0xdc,
  0x01, 0x0b, 0xa8, 0x30, 0x32, 0x98, 0x98, 0x09, 0x02, 0x00, 0x06, 0x1b,
  0x8c, 0x24, 0x0f, 0x08, 0x3d, 0x10, 0x03, 0x8b, 0x8a, 0x55, 0x99, 0x1c,
  0x9d, 0xd1, 0x9b, 0x95, 0x54, 0x18, 0xd9, 0x04, 0x01, 0x08, 0x83, 0x0d,
  0x46, 0xc2, 0x07, 0x44, 0x1f, 0x88, 0x81, 0xc5, 0xa8, 0x29, 0x0c, 0x4f,
  0xaa, 0x6c, 0xac, 0x4e, 0x6e, 0x2e, 0xed, 0xcd, 0x8d, 0xa8, 0x0c, 0x8e,
  0x0e, 0x6d, 0x82, 0x00, 0x88, 0xc1, 0x06, 0x23, 0xf9, 0x03, 0x02, 0x14,
  0xc4, 0xe0, 0x0e, 0xc8, 0x48, 0x85, 0xe5, 0xcd, 0x41, 0x95, 0xc9, 0x41,
  0xa5, 0xe1, 0x95, 0xb1, 0x4d, 0x10, 0x80, 0x31, 0xd8, 0x60, 0x24, 0xa2,
  0x40, 0x8c, 0x82, 0x18, 0xdc, 0x01, 0x35, 0xa6, 0xb0, 0x36, 0xb1, 0x32,
  0x39, 0xba, 0xb4, 0x30, 0xb7, 0x20, 0x3a, 0xba, 0x32, 0xb7, 0xba, 0x30,
  0xba, 0xb4, 0x37, 0x37, 0xab, 0x30, 0xb6, 0xba, 0xb2, 0x09, 0x02, 0x40,
  0x06, 0x1b, 0x8c, 0xa4, 0x14, 0x08, 0x53, 0x10, 0x03, 0x6b, 0x83, 0xc2,
  0xb9, 0x41, 0x1c, 0xd0, 0x01, 0x1e, 0xec, 0x81, 0x1f, 0x84, 0x02, 0x29,
  0x9c, 0xc2, 0x04, 0xc1, 0x79, 0x83, 0x09, 0x02, 0x50, 0x06, 0x2c, 0x86,
  0xde, 0xd8, 0xde, 0xe4, 0x36, 0x18, 0xc9, 0x2a, 0x10, 0x8b, 0x18, 0x58,
  0xcc, 0xae, 0xde, 0xe4, 0xd8, 0xc8, 0x98, 0xc2, 0xe6, 0xe8, 0xa6, 0xc6,
  0xc2, 0xe8, 0xe8, 0xca, 0xe4, 0x88, 0xd2, 0xe4, 0xca, 0xc6, 0xe8, 0xd2,
  0xde, 0xdc, 0x36, 0x18, 0x49, 0x2b, 0x10, 0x8e, 0x18, 0x58, 0x8c, 0x92,
  0xdc, 0xe8, 0xca, 0xe4, 0xe6, 0xca, 0xc6, 0xe8, 0xd2, 0xde, 0xdc, 0x86,
  0xde, 0xea, 0xdc, 0xe8, 0x26, 0x08, 0x80, 0x19, 0x6c, 0x30, 0x92, 0x57,
  0x20, 0x60, 0x41, 0x0c, 0xee, 0x80, 0x8e, 0x54, 0xd9, 0x58, 0x9d, 0xdc,
  0x5c, 0xda, 0x9b, 0x1b, 0x51, 0x19, 0x1c, 0x1d, 0xda, 0x04, 0x01, 0x38,
  0x83, 0x0d, 0x46, 0x22, 0x0b, 0xc4, 0x2c, 0x88, 0xc1, 0x1d, 0x6c, 0x28,
  0x54, 0x81, 0x15, 0x5c, 0x21, 0x16, 0x68, 0x61, 0x82, 0x00, 0xc1, 0x01,
  0xaf, 0x27, 0x31, 0xb5, 0xb2, 0x31, 0xba, 0x24, 0x37, 0xba, 0x32, 0xb9,
  0xb9, 0xb2, 0x31, 0xba, 0xb4, 0x37, 0x37, 0xa8, 0xb7, 0x34, 0x37, 0xba,
  0x0d, 0x46, 0x72, 0x0b, 0xc4, 0x22, 0x06, 0x16, 0xa7, 0x27, 0x31, 0xb5,
  0xb2, 0x31, 0xba, 0xa9, 0x3a, 0x39, 0xb3, 0xb0, 0xb1, 0x32, 0xa7, 0x37,
  0xb9, 0xb6, 0x30, 0xb6, 0x0d, 0x46, 0x92, 0x0b, 0x84, 0x23, 0x06, 0xd6,
  0x86, 0x01, 0x16, 0x70, 0x41, 0x17, 0x26, 0x08, 0x74, 0x30, 0x07, 0x34,
  0x9e, 0xe4, 0xd2, 0xce, 0xd2, 0xdc, 0x36, 0x18, 0x49, 0x2f, 0x10, 0x8b,
  0x18, 0x58, 0x24, 0xa8, 0x9a, 0xd2, 0xdc, 0x26, 0x08, 0x00, 0x1a, 0x6c,
  0x30, 0x92, 0x5f, 0x20, 0xc0, 0x41, 0x0c, 0x2c, 0x26, 0x44, 0x69, 0x72,
  0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1b, 0x8c, 0x44, 0x1c, 0x08, 0x47,
  0x0c, 0x2c, 0x12, 0x54, 0x4d, 0x61, 0x78, 0x1b, 0x8c, 0x84, 0x1c, 0x08,
  0x58, 0x10, 0x03, 0x6b, 0x43, 0x31, 0x0b, 0xbe, 0x10, 0x0e, 0xe3, 0x50,
  0x0e, 0x13, 0x84, 0xc5, 0x0d, 0x36, 0x10, 0xc9, 0x46, 0x2c, 0x1b, 0x04,
  0x0e, 0x1d, 0x36, 0x44, 0x0b, 0x18, 0x90, 0x41, 0x19, 0x9c, 0x01, 0x1a,
  0xa4, 0x81, 0x1a, 0xa0, 0x42, 0x2a, 0xd4, 0x82, 0x2d, 0xec, 0x02, 0x2f,
  0x98, 0xc3, 0x39, 0xa4, 0xc3, 0x04, 0x61, 0x1a, 0x36, 0x00, 0x1b, 0x86,
  0x81, 0x1d, 0xd8, 0x61, 0xc3, 0xc0, 0x06, 0xec, 0xc0, 0x0e, 0x1b, 0x86,
  0x85, 0x1d, 0xd8, 0x61, 0xc3, 0xd0, 0x0e, 0xee, 0xf0, 0x0e, 0x1b, 0x86,
  0x61, 0x1d, 0xe0, 0x81, 0xc0, 0x04, 0xa1, 0x0e, 0xd8, 0x60, 0x83, 0xb0,
  0xcc, 0xc3, 0x86, 0x02, 0x90, 0x07, 0xe0, 0xa3, 0x07, 0x8e, 0x42, 0xc0,
  0x0f, 0x53, 0x58, 0x9b, 0x58, 0x99, 0x1c, 0x5d, 0x5a, 0x98, 0xdb, 0x10,
  0xdb, 0xdb, 0x5c, 0xd9, 0x1c, 0x1d, 0x52, 0x1a, 0x1d, 0x10, 0x50, 0x56,
  0x10, 0x56, 0x95, 0x54, 0x58, 0x1e, 0x54, 0x58, 0x1e, 0xdb, 0x5b, 0x18,
  0x19, 0x10, 0x50, 0x55, 0x92, 0x1b, 0x5d, 0x99, 0xdc, 0x5c, 0xd9, 0x18,
  0x5d, 0xda, 0x9b, 0x5b, 0x10, 0x1d, 0x9d, 0x5c, 0x9a, 0x58, 0x1d, 0x5d,
  0xd9, 0x1c, 0x10, 0x10, 0x90, 0xd6, 0x04, 0x01, 0x48, 0x83, 0x09, 0x02,
  0xa0, 0x06, 0x1b, 0x82, 0x65, 0x03, 0x72, 0x0f, 0x54, 0x32, 0x0b, 0x62,
  0x80, 0x0f, 0x77, 0x90, 0x0f, 0x1b, 0x8a, 0x75, 0xb0, 0x07, 0x00, 0xd0,
  0x07, 0x0e, 0x69, 0x6e, 0x74, 0x7c, 0xde, 0xda, 0xdc, 0xd2, 0xe0, 0xde,
  0xe8, 0xca, 0xdc, 0xe8, 0x40, 0xc6, 0xd0, 0xc2, 0xe4, 0x18, 0x4d, 0xa5,
  0xb5, 0xc1, 0xb1, 0x95, 0x81, 0x0c, 0xbd, 0x0c, 0xad, 0xac, 0x80, 0x50,
  0x09, 0x05, 0x05, 0x6d, 0x08, 0xfc, 0x61, 0x82, 0x50, 0x07, 0x6b, 0xb0,
  0x61, 0xe8, 0x87, 0x7f, 0x00, 0x89, 0x0d, 0x03, 0x3f, 0x84, 0x04, 0x48,
  0x6c, 0x18, 0x44, 0x42, 0x24, 0x40, 0x62, 0xc3, 0x10, 0x12, 0x21, 0x01,
  0x12, 0x55, 0xd8, 0xd8, 0xec, 0xda, 0x5c, 0xd2, 0xc8, 0xca, 0xdc, 0xe8,
  0xa6, 0x04, 0x41, 0x15, 0x32, 0x3c, 0x17, 0xbb, 0x32, 0xb9, 0xb9, 0xb4,
  0x37, 0xb7, 0x29, 0x01, 0xd1, 0x84, 0x0c, 0xcf, 0xc5, 0x2e, 0x8c, 0xcd,
  0xae, 0x4c, 0x6e, 0x4a, 0x60, 0xd4, 0x21, 0xc3, 0x73, 0x99, 0x43, 0x0b,
  0x23, 0x2b, 0x93, 0x6b, 0x7a, 0x23, 0x2b, 0x63, 0x9b, 0x12, 0x24, 0x65,
  0xc8, 0xf0, 0x5c, 0xe4, 0xca, 0xe6, 0xde, 0xea, 0xe4, 0xc6, 0xca, 0xe6,
  0xa6, 0x04, 0x5e, 0x25, 0x32, 0x3c, 0x17, 0xba, 0x3c, 0xb8, 0xb2, 0x20,
  0x37, 0xb7, 0x37, 0xba, 0x30, 0xba, 0xb4, 0x37, 0xb7, 0xb9, 0x29, 0x42,
  0x3a, 0xc0, 0x43, 0x1d, 0x32, 0x3c, 0x97, 0x32, 0x37, 0x3a, 0xb9, 0x3c,
  0xa8, 0xb7, 0x34, 0x37, 0xba, 0xb9, 0x29, 0x02, 0x3d, 0xe8, 0x03, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x8c, 0xcc, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x74, 0x60, 0x07, 0x37, 0x90, 0x87, 0x72, 0x98, 0x87, 0x77, 0xa8,
  0x07, 0x79, 0x18, 0x87, 0x72, 0x70, 0x83, 0x70, 0xa0, 0x07, 0x7a, 0x90,
  0x87, 0x74, 0x10, 0x87, 0x7a, 0xa0, 0x87, 0x72, 0x00, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00, 0xe6, 0x20, 0x06, 0xc3,
  0xe5, 0x3b, 0x8f, 0x2f, 0x44, 0x04, 0x30, 0x11, 0x21, 0xd0, 0x0c, 0x0b,
  0xf1, 0x39, 0x51, 0x89, 0x04, 0x3e, 0xe7, 0x34, 0xd2, 0x04, 0x34, 0x93,
  0x64, 0x0c, 0xd2, 0x70, 0xf9, 0xce, 0xe3, 0x4f, 0x44, 0x34, 0x21, 0x40,
  0x84, 0xf9, 0xc5, 0x6d, 0x1b, 0xc1, 0x36, 0x5c, 0xbe, 0xf3, 0xf8, 0x42,
  0x40, 0x15, 0x05, 0x11, 0x95, 0x0e, 0x30, 0x94, 0x84, 0x01, 0x08, 0x98,
  0x8f, 0xdc, 0xb6, 0x41, 0xfc, 0xc1, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x11,
  0x01, 0x4c, 0x44, 0x08, 0x34, 0xc3, 0x42, 0x7c, 0x4e, 0x54, 0x22, 0x81,
  0x2f, 0x4d, 0x11, 0x25, 0x4c, 0xfe, 0x0a, 0x60, 0x53, 0x04, 0x08, 0x48,
  0x63, 0x68, 0x82, 0x40, 0x2c, 0x44, 0x04, 0x4c, 0x88, 0xd3, 0xb0, 0x53,
  0x44, 0x09, 0x13, 0x15, 0x11, 0x26, 0x90, 0x70, 0x4e, 0x23, 0x4d, 0x40,
  0x33, 0x49, 0x15, 0x70, 0x06, 0x81, 0x9f, 0x34, 0xec, 0x26, 0xbf, 0xdb,
  0xce, 0x7a, 0x5b, 0x5c, 0x96, 0x0b, 0xeb, 0x66, 0x73, 0x59, 0x0e, 0x04,
  0xce, 0xac, 0x3f, 0x92, 0xf4, 0x2a, 0xac, 0x9b, 0xcd, 0x65, 0x39, 0xb0,
  0x09, 0x04, 0x06, 0x0b, 0xa0, 0x0d, 0x02, 0xbf, 0xe9, 0xb8, 0xec, 0x2e,
  0x03, 0x81, 0xb3, 0xaa, 0x34, 0x9c, 0xa7, 0xcb, 0xc3, 0xe3, 0xb4, 0xfb,
  0x1c, 0x1c, 0x8f, 0xcb, 0xec, 0xb2, 0x3c, 0x4c, 0x4f, 0xbf, 0xdd, 0x53,
  0xba, 0xbc, 0x3e, 0xa6, 0xd7, 0xe5, 0x65, 0x20, 0x30, 0x68, 0x0a, 0x60,
  0x30, 0x5c, 0xbe, 0xf3, 0xf8, 0x53, 0x04, 0x08, 0xc4, 0x0a, 0x60, 0xbe,
  0x34, 0x45, 0x94, 0x30, 0xf9, 0x2b, 0x80, 0xa5, 0x00, 0xb6, 0x38, 0xc0,
  0x60, 0x07, 0xd4, 0x70, 0xf9, 0xce, 0xe3, 0x07, 0x54, 0x51, 0x10, 0x51,
  0xe9, 0x00, 0x83, 0x5f, 0xdc, 0xb6, 0x21, 0x38, 0xc3, 0xe5, 0x3b, 0x8f,
  0x3f, 0x38, 0xd3, 0xed, 0x17, 0xb7, 0x5d, 0x03, 0xa3, 0x10, 0xf8, 0x31,
  0xc3, 0x6d, 0x71, 0x59, 0x4e, 0x4f, 0x87, 0xdd, 0x43, 0xf6, 0x7b, 0x5e,
  0x9e, 0xd3, 0x91, 0x69, 0x3a, 0x10, 0x98, 0x0d, 0x62, 0xab, 0xd2, 0x70,
  0x1e, 0x1a, 0xce, 0xb3, 0xdf, 0x61, 0x32, 0x10, 0x58, 0x4d, 0xba, 0xe9,
  0x65, 0xf9, 0xbc, 0x3c, 0xa6, 0xa7, 0xdf, 0xee, 0x20, 0x9d, 0x2e, 0x4f,
  0x8b, 0xeb, 0xf4, 0xf2, 0x1c, 0x08, 0x04, 0x6a, 0xad, 0xe1, 0x1a, 0x2e,
  0xdf, 0x79, 0x7c, 0x27, 0x48, 0x08, 0x61, 0x6a, 0x1d, 0xd8, 0x89, 0x96,
  0xc1, 0x2f, 0x6e, 0xdb, 0x16, 0xa8, 0xe1, 0xf2, 0x9d, 0xc7, 0x47, 0x1a,
  0x69, 0x02, 0x1a, 0x81, 0x10, 0x3b, 0x1f, 0xb9, 0x6d, 0x2b, 0xd8, 0x86,
  0xcb, 0x77, 0x1e, 0x7f, 0x40, 0xa4, 0x07, 0x98, 0x84, 0x63, 0x05, 0x30,
  0x49, 0x6c, 0x06, 0xe2, 0xf2, 0x91, 0xdb, 0x36, 0x03, 0x30, 0x18, 0x2e,
  0xdf, 0x79, 0xfc, 0x01, 0x91, 0x1e, 0x60, 0x12, 0x8e, 0x15, 0xc0, 0xa4,
  0x0e, 0x61, 0x88, 0x46, 0x42, 0x9c, 0x46, 0xf2, 0x91, 0xdb, 0xae, 0x07,
  0x37, 0x20, 0xe3, 0x5d, 0x6f, 0xb8, 0x6b, 0x2c, 0x2f, 0x87, 0xe9, 0x65,
  0x64, 0xd8, 0x4d, 0x66, 0x97, 0x8d, 0x6f, 0x39, 0x33, 0x2d, 0x76, 0x8d,
  0xd9, 0xe1, 0xf9, 0xdc, 0x25, 0xbd, 0x0a, 0xeb, 0x66, 0x73, 0x59, 0xce,
  0x33, 0xb3, 0xdf, 0x61, 0xba, 0xcf, 0x12, 0x9e, 0xe1, 0xf2, 0x9d, 0xc7,
  0xa7, 0x1a, 0x20, 0xc2, 0xfc, 0xe2, 0xb6, 0x01, 0x61, 0x20, 0x00, 0x00,
  0x74, 0x01, 0x00, 0x00, 0x13, 0x04, 0x43, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x0e, 0x00, 0x00, 0x00, 0x04, 0x94, 0xab, 0x40, 0x71, 0x15, 0xb0, 0x40,
  0x21, 0x06, 0xcc, 0x00, 0x94, 0x5b, 0xc9, 0x94, 0xa8, 0x40, 0xd9, 0x15,
  0xa9, 0x40, 0x69, 0x0a, 0xd4, 0x40, 0xe9, 0x0a, 0x50, 0x5d, 0x04, 0x25,
  0x40, 0x55, 0x19, 0x8c, 0x00, 0x94, 0x40, 0x11, 0x50, 0x32, 0x03, 0x40,
  0xc3, 0x18, 0x01, 0x08, 0xc2, 0x78, 0x38, 0x06, 0x23, 0x00, 0x00, 0x00,
  0xe4, 0x0a, 0xc1, 0x20, 0x57, 0x20, 0x06, 0xb9, 0xc2, 0x32, 0x46, 0x0c,
  0x0c, 0x00, 0x04, 0xc1, 0x60, 0x0d, 0x46, 0xe1, 0x0a, 0x66, 0x22, 0x1c,
  0x20, 0x22, 0x85, 0xed, 0x0c, 0x9d, 0x1f, 0xe0, 0x01, 0x05, 0xc0, 0xa8,
  0x80, 0x14, 0x60, 0xd8, 0x80, 0x18, 0x82, 0x01, 0xd8, 0xd0, 0xf0, 0x85,
  0x42, 0x28, 0x50, 0x90, 0x8c, 0x31, 0x84, 0xa0, 0x0d, 0xc6, 0x10, 0x84,
  0x69, 0x0c, 0x61, 0xa8, 0x36, 0x34, 0x90, 0x81, 0x29, 0xa8, 0x02, 0x05,
  0xc9, 0x18, 0x43, 0x08, 0xe4, 0x60, 0x0c, 0x41, 0xc0, 0xc6, 0x10, 0x06,
  0x6d, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xd2, 0x60, 0x16, 0xd0, 0x60,
  0x15, 0xb0, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0x48, 0x03, 0x5a, 0x48,
  0x03, 0x56, 0xc0, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x20, 0x0d, 0x6a,
  0x41, 0x0d, 0x5a, 0x01, 0x1b, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x34,
  0xb0, 0x85, 0x35, 0x90, 0x85, 0x6d, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c,
  0xd2, 0xe0, 0x16, 0xd8, 0x60, 0x16, 0xb6, 0x11, 0x83, 0x03, 0x00, 0x41,
  0x30, 0x48, 0x03, 0x5c, 0x68, 0x03, 0x5a, 0xd8, 0x46, 0x0c, 0x0e, 0x00,
  0x04, 0xc1, 0x20, 0x0d, 0x72, 0xc1, 0x0d, 0x56, 0xc1, 0x1b, 0x31, 0x38,
  0x00, 0x10, 0x04, 0x83, 0x34, 0xd0, 0x85, 0x37, 0x60, 0x05, 0x6f, 0xc4,
  0xe0, 0x00, 0x40, 0x10, 0x0c, 0xd2, 0x60, 0x17, 0xe0, 0xa0, 0x15, 0x3c,
  0x4b, 0x18, 0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0x19, 0xf8,
  0x42, 0x1c, 0x24, 0x4c, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x67,
  0xf0, 0x0b, 0x72, 0x90, 0x30, 0x81, 0x25, 0x8f, 0x7c, 0x46, 0x0c, 0x10,
  0x00, 0x04, 0xc1, 0xe0, 0x0c, 0xc2, 0x81, 0x0e, 0x92, 0x27, 0x18, 0x31,
  0x40, 0x00, 0x10, 0x04, 0x83, 0x33, 0x10, 0x87, 0x3a, 0x48, 0x9e, 0xc0,
  0x12, 0x49, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x70, 0x06, 0xe4,
  0x70, 0x07, 0x89, 0x14, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0x19,
  0x94, 0x03, 0x1e, 0x24, 0x52, 0x30, 0x62, 0xb0, 0x00, 0x20, 0x08, 0x06,
  0x9f, 0x3a, 0xd4, 0xc1, 0x41, 0x04, 0x07, 0x11, 0x8c, 0x18, 0x18, 0x00,
  0x08, 0x82, 0x41, 0x18, 0xa8, 0x43, 0x1d, 0x04, 0x16, 0x24, 0xf2, 0x31,
  0xe1, 0x90, 0x8f, 0x0d, 0x85, 0x7c, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1,
  0x40, 0x93, 0x07, 0x3c, 0x70, 0x83, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30,
  0xd0, 0xe4, 0xe1, 0x0e, 0xe0, 0xa0, 0x02, 0x41, 0x46, 0x0c, 0x0c, 0x00,
  0x04, 0xc1, 0x40, 0xab, 0x87, 0x3d, 0x90, 0x83, 0x12, 0x02, 0xa8, 0x40,
  0x1d, 0xa4, 0x02, 0x34, 0x80, 0x52, 0x83, 0x71, 0x80, 0x0a, 0x06, 0x28,
  0x36, 0x70, 0x07, 0xa8, 0xa0, 0x80, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30,
  0xc0, 0xfc, 0x41, 0x14, 0xe2, 0xc0, 0x1d, 0x46, 0x13, 0x02, 0xa0, 0x8e,
  0xa0, 0xca, 0x10, 0xaa, 0x8a, 0xa1, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1,
  0xa0, 0x0d, 0xf0, 0xa1, 0x15, 0xf0, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10,
  0x0c, 0xba, 0x90, 0x68, 0x85, 0x80, 0x60, 0x85, 0xd1, 0x84, 0x00, 0x18,
  0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x6e, 0x24, 0x5e, 0x61, 0x28, 0x5c,
  0x61, 0x34, 0x21, 0x00, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xa0, 0x2b,
  0x89, 0x58, 0x28, 0x0c, 0x58, 0x18, 0x4d, 0x08, 0x00, 0x2b, 0x34, 0xf8,
  0x18, 0xa1, 0xc1, 0xc7, 0x06, 0x0d, 0x3e, 0x23, 0x06, 0x0b, 0x00, 0x82,
  0x60, 0xf0, 0xa5, 0x04, 0x2d, 0x0c, 0x42, 0x30, 0x08, 0xc1, 0x88, 0x81,
  0x01, 0x80, 0x20, 0x18, 0x84, 0x41, 0x4a, 0xd0, 0x42, 0x60, 0x41, 0x21,
  0x1f, 0x13, 0x0a, 0xf9, 0x58, 0x31, 0xc8, 0x67, 0x8e, 0x61, 0x15, 0x86,
  0x90, 0x98, 0x63, 0x08, 0x06, 0x93, 0x98, 0x63, 0x08, 0x86, 0x7e, 0xd8,
  0xce, 0x30, 0x0e, 0x24, 0x81, 0x12, 0xc3, 0x06, 0x44, 0x20, 0x0c, 0xc0,
  0x76, 0x06, 0x72, 0x28, 0x09, 0x94, 0xa0, 0x00, 0x18, 0x23, 0x06, 0x07,
  0x00, 0x82, 0x60, 0x80, 0xe1, 0x04, 0x2f, 0xac, 0x82, 0x48, 0x8c, 0x26,
  0x04, 0xc1, 0x70, 0xc3, 0x10, 0x90, 0xc1, 0x2c, 0x43, 0x20, 0x04, 0x96,
  0x07, 0xa7, 0x20, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x38, 0x03,
  0x9a, 0x38, 0x87, 0x3c, 0x38, 0x85, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10,
  0x0c, 0xce, 0xa0, 0x26, 0xd0, 0x21, 0x0f, 0x4e, 0x21, 0x18, 0x31, 0x38,
  0x00, 0x10, 0x04, 0x83, 0x34, 0xa8, 0x09, 0x75, 0x38, 0x89, 0x5d, 0x30,
  0x21, 0x80, 0x8e, 0x85, 0x02, 0x2b, 0xc8, 0x67, 0xc4, 0x00, 0x01, 0x40,
  0x10, 0x0c, 0xce, 0x20, 0x27, 0xd8, 0x21, 0x14, 0x58, 0x21, 0x18, 0x31,
  0x40, 0x00, 0x10, 0x04, 0x83, 0x33, 0xd0, 0x89, 0x76, 0x08, 0x05, 0x56,
  0x08, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x20, 0x0d, 0x74, 0xe2, 0x1d,
  0x6c, 0x02, 0x1c, 0x4c, 0x08, 0xa0, 0x63, 0xa9, 0x10, 0x0b, 0xf2, 0x19,
  0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x33, 0xf0, 0x89, 0x78, 0x48, 0x85,
  0x58, 0x08, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xe0, 0x0c, 0x7e, 0x42,
  0x1e, 0x52, 0x21, 0x16, 0x82, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0x48,
  0x83, 0x9f, 0xa0, 0x87, 0x9b, 0x28, 0x07, 0x13, 0x02, 0xe8, 0xd4, 0xd4,
  0x13, 0xb0, 0x9d, 0xa1, 0x17, 0x74, 0x42, 0x27, 0xb6, 0x33, 0xe8, 0xc3,
  0x4e, 0xec, 0x04, 0x05, 0xc9, 0x18, 0x36, 0x20, 0x86, 0x80, 0x00, 0xb6,
  0x33, 0x80, 0x43, 0x4f, 0x84, 0xc5, 0xb0, 0x01, 0x11, 0x6c, 0x03, 0xb0,
  0x9d, 0x21, 0x1c, 0x7c, 0x02, 0x27, 0x86, 0x0d, 0x88, 0xe0, 0x17, 0x08,
  0x60, 0x3b, 0x83, 0x38, 0xfc, 0x84, 0x58, 0x0c, 0x1b, 0x10, 0xc1, 0x31,
  0x00, 0x23, 0x06, 0x05, 0x00, 0x82, 0x60, 0x50, 0x06, 0x6a, 0x31, 0x0f,
  0x15, 0xcc, 0x03, 0x8f, 0x18, 0x18, 0x00, 0x08, 0x82, 0xc1, 0x1b, 0x9c,
  0x45, 0x3f, 0xa4, 0xc3, 0x88, 0x01, 0x55, 0x80, 0x20, 0x18, 0x8c, 0x81,
  0x5b, 0xd0, 0x43, 0x90, 0x13, 0xc2, 0x58, 0x9c, 0xc5, 0x58, 0x2c, 0x50,
  0xb5, 0x0e, 0x65, 0x40, 0x06, 0x63, 0xc0, 0x0e, 0xe6, 0x40, 0x49, 0x42,
  0x86, 0x0d, 0x88, 0x24, 0x18, 0x00, 0x3a, 0x92, 0x31, 0x6c, 0x40, 0x84,
  0x41, 0x30, 0x00, 0x74, 0x00, 0x64, 0xd8, 0x80, 0x40, 0x87, 0x60, 0x00,
  0xe8, 0x00, 0xc6, 0xb0, 0x01, 0x21, 0x06, 0xc1, 0x00, 0xcc, 0x12, 0x08,
  0x18, 0x0e, 0x04, 0x00, 0x75, 0x00, 0x00, 0x00, 0xa6, 0x18, 0xc0, 0x6c,
  0x54, 0x51, 0x10, 0x51, 0xe9, 0x00, 0x83, 0xad, 0x1b, 0x62, 0x00, 0xb3,
  0x51, 0x45, 0x41, 0x44, 0xa5, 0x03, 0x0c, 0xf6, 0x6e, 0x60, 0x0d, 0x1a,
  0x24, 0x84, 0x30, 0xb5, 0x0e, 0xec, 0x44, 0xcb, 0x60, 0x64, 0x0f, 0x1a,
  0x24, 0x84, 0x30, 0xb5, 0x0e, 0xec, 0x44, 0xcb, 0x90, 0xd3, 0x56, 0xf6,
  0xa0, 0x41, 0x42, 0x08, 0x53, 0xeb, 0xc0, 0x4e, 0xb4, 0x0c, 0x79, 0x6d,
  0x78, 0x58, 0x87, 0x48, 0x0f, 0x30, 0x09, 0xc7, 0x0a, 0x60, 0x52, 0x87,
  0x30, 0x44, 0x23, 0x21, 0x4e, 0x23, 0xd9, 0xb4, 0x99, 0x3d, 0x68, 0x90,
  0x10, 0xc2, 0xd4, 0x3a, 0xb0, 0x13, 0x2d, 0x43, 0x7e, 0xdb, 0xd9, 0x83,
  0x06, 0x09, 0x21, 0x4c, 0xad, 0x03, 0x3b, 0xd1, 0x32, 0xe4, 0xb8, 0xa1,
  0x3d, 0x68, 0x90, 0x10, 0xc2, 0xd4, 0x3a, 0xb0, 0x13, 0x2d, 0x43, 0x9e,
  0x5b, 0xd4, 0xc2, 0x39, 0x8d, 0x34, 0x01, 0xcd, 0x24, 0xe9, 0xbd, 0xd5,
  0x06, 0x28, 0x62, 0x23, 0x4d, 0x40, 0x23, 0x10, 0x62, 0x67, 0x71, 0xc6,
  0x67, 0x02, 0x83, 0xdd, 0x1b, 0x6b, 0xc0, 0x83, 0x06, 0x09, 0x21, 0x4c,
  0xad, 0x03, 0x3b, 0xd1, 0x32, 0xe8, 0xb4, 0x9d, 0x06, 0x3c, 0x68, 0x90,
  0x10, 0xc2, 0xd4, 0x3a, 0xb0, 0x13, 0x2d, 0x83, 0x8e, 0x9b, 0x68, 0xc0,
  0x83, 0x06, 0x09, 0x21, 0x4c, 0xad, 0x03, 0x3b, 0xd1, 0x32, 0xe8, 0xbc,
  0x59, 0x06, 0x20, 0x3e, 0xf5, 0x4c, 0x0e, 0xcd, 0xe3, 0xf6, 0x18, 0x50,
  0xf8, 0x48, 0xbd, 0xef, 0x06, 0x67, 0x7c, 0x26, 0x30, 0xdc, 0xb4, 0xcd,
  0x15, 0xab, 0x04, 0x45, 0x93, 0xb9, 0x19, 0x9f, 0x09, 0x0c, 0xb7, 0x6d,
  0x95, 0x01, 0x85, 0x8f, 0xd8, 0x7c, 0x6d, 0x6b, 0xc6, 0x67, 0x02, 0xc3,
  0x9d, 0x9b, 0x9a, 0xf1, 0x99, 0xc0, 0x70, 0xeb, 0x16, 0x1a, 0x60, 0x7c,
  0x26, 0x30, 0xdc, 0xbc, 0x81, 0x06, 0x18, 0x9f, 0x09, 0x0c, 0x77, 0x6f,
  0x36, 0x47, 0x0a, 0x60, 0x8b, 0x03, 0x0c, 0xa6, 0x37, 0x75, 0x88, 0xf4,
  0x00, 0x93, 0x70, 0xac, 0x00, 0x26, 0x89, 0xcd, 0x40, 0x5c, 0xf5, 0x6e,
  0x6d, 0xc6, 0x67, 0x02, 0xc3, 0x7d, 0x1b, 0x65, 0x40, 0xe1, 0x23, 0x35,
  0x4f, 0x1b, 0x63, 0x80, 0xb2, 0x51, 0x45, 0x41, 0x44, 0xa5, 0x03, 0x0c,
  0x66, 0x1a, 0x60, 0x7c, 0x26, 0x30, 0xe0, 0xb5, 0x95, 0x06, 0x18, 0x9f,
  0x09, 0x0c, 0xb8, 0x6d, 0xab, 0x01, 0xc6, 0x67, 0x02, 0x03, 0x8e, 0x9b,
  0x6a, 0x80, 0xf1, 0x99, 0xc0, 0x80, 0xe7, 0x26, 0x19, 0x70, 0xac, 0x12,
  0x14, 0x4d, 0x36, 0x6f, 0x37, 0x8a, 0x36, 0x4d, 0x11, 0x12, 0x50, 0x13,
  0x21, 0x59, 0xdd, 0xe0, 0x23, 0xb5, 0xdd, 0x4d, 0x1d, 0x22, 0x3d, 0xc0,
  0x24, 0x1c, 0x2b, 0x80, 0x49, 0x62, 0x33, 0x10, 0x97, 0x8d, 0x9b, 0xd8,
  0x83, 0x06, 0x09, 0x21, 0x4c, 0xad, 0x03, 0x3b, 0xd1, 0x32, 0xe0, 0xbb,
  0xd1, 0x0d, 0x3e, 0x42, 0x5b, 0xd8, 0x83, 0x06, 0x09, 0x21, 0x4c, 0xad,
  0x03, 0x3b, 0xd1, 0x32, 0xe0, 0xba, 0xd9, 0x0d, 0x3e, 0x62, 0xdb, 0xd8,
  0x83, 0x06, 0x09, 0x21, 0x4c, 0xad, 0x03, 0x3b, 0xd1, 0x32, 0xe0, 0xbd,
  0x41, 0x06, 0x14, 0x3e, 0x62, 0xef, 0xbc, 0x39, 0x06, 0x14, 0x3e, 0x42,
  0xef, 0xba, 0x4d, 0x06, 0x14, 0x3e, 0x42, 0xef, 0xbd, 0x5d, 0x06, 0x20,
  0x3e, 0xf5, 0x4c, 0x4e, 0xcd, 0xe7, 0x00, 0x00, 0x01, 0x31, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x5b, 0x06, 0x23, 0x10, 0x89, 0x2d, 0x03, 0x12,
  0x88, 0xc4, 0x96, 0x41, 0x09, 0x46, 0x62, 0xcb, 0xf0, 0x04, 0x23, 0xb1,
  0x65, 0x68, 0x85, 0x60, 0x24, 0xb6, 0x0c, 0xaf, 0x10, 0x88, 0x04, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
